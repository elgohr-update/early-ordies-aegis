{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n          case 7:\n            op = _.ops.pop();\n            _.trys.pop();\n            continue;\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n              _.ops.push(op);\n              break;\n            }\n            if (t[2]) _.ops.pop();\n            _.trys.pop();\n            continue;\n        }\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar blockchain_1 = require(\"../services/blockchain\");\nvar store_1 = require(\"../store\");\nvar errors_1 = require(\"../helpers/errors\");\nfunction transferParentChain(config) {\n  return __awaiter(this, void 0, void 0, function () {\n    var from, to, token, amount, gasPrice, tx, tx, e_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          from = config.from, to = config.to, token = config.token, amount = config.amount, gasPrice = config.gasPrice;\n          if (!blockchain_1.blockchain.isPrivateKeyAdded(from)) {\n            return [2, Promise.reject(new errors_1.NCError(errors_1.NCErrorCode.NO_PRIVATE_KEY))];\n          }\n          _a.label = 1;\n        case 1:\n          _a.trys.push([1, 6,, 7]);\n          if (!(token === store_1.store.contractAddress || token == null)) return [3, 3];\n          return [4, blockchain_1.blockchain.sendEther({\n            from: from,\n            to: to,\n            amount: amount,\n            gasPrice: gasPrice\n          })];\n        case 2:\n          tx = _a.sent();\n          return [2, tx.transactionHash];\n        case 3:\n          return [4, blockchain_1.blockchain.sendERC20({\n            from: from,\n            to: to,\n            token: token,\n            amount: amount,\n            gasPrice: gasPrice\n          })];\n        case 4:\n          tx = _a.sent();\n          return [2, tx.transactionHash];\n        case 5:\n          return [3, 7];\n        case 6:\n          e_1 = _a.sent();\n          return [2, Promise.reject(e_1)];\n        case 7:\n          return [2];\n      }\n    });\n  });\n}\nexports.default = transferParentChain;","map":null,"metadata":{},"sourceType":"script"}