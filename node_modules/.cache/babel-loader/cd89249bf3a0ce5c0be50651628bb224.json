{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nvar json_bigint_1 = __importDefault(require(\"json-bigint\"));\nvar eon_1 = require(\"./eon\");\nvar _1 = require(\".\");\nfunction parseWallet(data) {\n  var w = json_bigint_1.default.parse(data);\n  var wallet = _1.createWallet(w.address, w.token);\n  wallet.isRegistered = w.isRegistered;\n  wallet.registrationEon = w.registrationEon;\n  wallet.registrationSignature = w.registrationSignature;\n  wallet.trailIdentifier = w.trailIdentifier;\n  if (w.currentEon) {\n    wallet.currentEon = new eon_1.Eon(wallet, w.currentEon.eon);\n    if (w.currentEon.accountProof) {\n      wallet.currentEon.accountProof = __assign(__assign({}, w.currentEon.accountProof), {\n        left: new bignumber_js_1.default(w.currentEon.accountProof.left),\n        right: new bignumber_js_1.default(w.currentEon.accountProof.right),\n        pathValues: w.currentEon.accountProof.pathValues.map(function (v) {\n          return new bignumber_js_1.default(v);\n        })\n      });\n    }\n    wallet.currentEon.deposits = w.currentEon.deposits.map(function (d) {\n      return __assign(__assign({}, d), {\n        amount: new bignumber_js_1.default(d.amount)\n      });\n    });\n    wallet.currentEon.transactions = w.currentEon.transactions.map(function (t) {\n      return __assign(__assign({}, t), {\n        amount: new bignumber_js_1.default(t.amount),\n        passiveMarker: new bignumber_js_1.default(t.passiveMarker),\n        nonce: new bignumber_js_1.default(t.nonce)\n      });\n    });\n  }\n  return wallet;\n}\nexports.parseWallet = parseWallet;","map":null,"metadata":{},"sourceType":"script"}