{"ast":null,"code":"import _asyncToGenerator from \"/home/cryptodev/Dev/aegis-burner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/cryptodev/Dev/aegis-burner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cryptodev/Dev/aegis-burner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/cryptodev/Dev/aegis-burner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/cryptodev/Dev/aegis-burner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cryptodev/Dev/aegis-burner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/home/cryptodev/Dev/aegis-burner/src/index.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.scss';\nimport Web3 from 'web3';\nimport App from './App';\nimport Dapparatus from './components/dapparatus';\nimport ThemeContext from './contexts/Theme';\nrequire('dotenv').config();\nvar WEB3_PROVIDER = process.env.REACT_APP_WEB3_PROVIDER;\nvar KeyManager = /*#__PURE__*/function (_React$Component) {\n  _inherits(KeyManager, _React$Component);\n  var _super = _createSuper(KeyManager);\n  function KeyManager(props) {\n    var _this;\n    _classCallCheck(this, KeyManager);\n    _this = _super.call(this, props);\n    _this.state = {};\n    return _this;\n  }\n  _createClass(KeyManager, [{\n    key: \"setPossibleNewPrivateKey\",\n    value: function setPossibleNewPrivateKey(value) {\n      var _this2 = this;\n      this.setState({\n        possibleNewPrivateKey: value\n      }, function () {\n        _this2.dealWithPossibleNewPrivateKey();\n      });\n    }\n  }, {\n    key: \"dealWithPossibleNewPrivateKey\",\n    value: function () {\n      var _dealWithPossibleNewPrivateKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // this happens as page load and you need to wait until\n                if (this.state) {\n                  if (this.state.metaAccount && this.state.metaAccount.privateKey.replace('0x', '') === this.state.possibleNewPrivateKey.replace('0x', '')) {\n                    this.setState({\n                      possibleNewPrivateKey: false\n                    });\n                    // this.changeAlert({\n                    //   type: 'warning',\n                    //   message: 'Imported identical private key.'\n                    // })\n                  } else {\n                    console.log('Checking on pk import...');\n                    console.log('this.state.metaAccount', this.state.metaAccount);\n                    this.setState({\n                      possibleNewPrivateKey: false,\n                      newPrivateKey: this.state.possibleNewPrivateKey\n                    });\n                  }\n                } else {\n                  setTimeout(this.dealWithPossibleNewPrivateKey.bind(this), 500);\n                }\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function dealWithPossibleNewPrivateKey() {\n        return _dealWithPossibleNewPrivateKey.apply(this, arguments);\n      }\n      return dealWithPossibleNewPrivateKey;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Dapparatus, {\n        config: {\n          DEBUG: false,\n          hide: true,\n          //requiredNetwork: ['Unknown', 'Rinkeby'],\n          requiredNetwork: ['Local', 'Goerli'],\n          POLLINTERVAL: 5000 // responsible for slow load times\n        }\n        // used to pass a private key into Dapparatus\n        ,\n        newPrivateKey: this.state.newPrivateKey,\n        fallbackWeb3Provider: WEB3_PROVIDER,\n        onUpdate: /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(state) {\n            return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    console.log('Dapparatus update', state);\n                    if (state.web3Provider) {\n                      state.web3 = new Web3(state.web3Provider);\n                      if (state.metaAccount) {\n                        state.web3.eth.accounts.wallet.add(state.metaAccount.privateKey);\n                      }\n                      _this3.setState(state, function () {\n                        // console.log(\"state set:\",this.state)\n                        if (_this3.state.possibleNewPrivateKey) {\n                          _this3.dealWithPossibleNewPrivateKey();\n                        }\n                      });\n                    }\n                  case 2:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2);\n          }));\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(App, {\n        web3: this.state.web3,\n        address: this.state.account,\n        privateKey: this.state.metaAccount && this.state.metaAccount.privateKey,\n        network: this.state.network,\n        networkId: this.state.networkId,\n        burnMetaAccount: this.state.burnMetaAccount,\n        setPossibleNewPrivateKey: this.setPossibleNewPrivateKey.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n  return KeyManager;\n}(React.Component);\nReactDOM.render( /*#__PURE__*/React.createElement(ThemeContext, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(KeyManager, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }\n})), document.getElementById('root'));","map":{"version":3,"names":["React","ReactDOM","Web3","App","Dapparatus","ThemeContext","require","config","WEB3_PROVIDER","process","env","REACT_APP_WEB3_PROVIDER","KeyManager","props","state","value","setState","possibleNewPrivateKey","dealWithPossibleNewPrivateKey","metaAccount","privateKey","replace","console","log","newPrivateKey","setTimeout","bind","DEBUG","hide","requiredNetwork","POLLINTERVAL","web3Provider","web3","eth","accounts","wallet","add","account","network","networkId","burnMetaAccount","setPossibleNewPrivateKey","Component","render","document","getElementById"],"sources":["/home/cryptodev/Dev/aegis-burner/src/index.js"],"sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.scss'\nimport Web3 from 'web3'\n\nimport App from './App'\nimport Dapparatus from './components/dapparatus'\n\nimport ThemeContext from './contexts/Theme'\n\nrequire('dotenv').config()\n\nconst WEB3_PROVIDER = process.env.REACT_APP_WEB3_PROVIDER\n\nclass KeyManager extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {}\n  }\n\n  setPossibleNewPrivateKey (value) {\n    this.setState({ possibleNewPrivateKey: value }, () => {\n      this.dealWithPossibleNewPrivateKey()\n    })\n  }\n\n  async dealWithPossibleNewPrivateKey () {\n    // this happens as page load and you need to wait until\n    if (this.state) {\n      if (this.state.metaAccount && this.state.metaAccount.privateKey.replace('0x', '') === this.state.possibleNewPrivateKey.replace('0x', '')) {\n        this.setState({ possibleNewPrivateKey: false })\n        // this.changeAlert({\n        //   type: 'warning',\n        //   message: 'Imported identical private key.'\n        // })\n      } else {\n        console.log('Checking on pk import...')\n        console.log('this.state.metaAccount', this.state.metaAccount)\n\n        this.setState({\n          possibleNewPrivateKey: false,\n          newPrivateKey: this.state.possibleNewPrivateKey\n        })\n      }\n    } else {\n      setTimeout(this.dealWithPossibleNewPrivateKey.bind(this), 500)\n    }\n  }\n\n  render () {\n    return (\n      <>\n        <Dapparatus\n          config={{\n            DEBUG: false,\n            hide: true,\n            //requiredNetwork: ['Unknown', 'Rinkeby'],\n            requiredNetwork: ['Local', 'Goerli'],\n            POLLINTERVAL: 5000 // responsible for slow load times\n          }}\n          // used to pass a private key into Dapparatus\n          newPrivateKey={this.state.newPrivateKey}\n          fallbackWeb3Provider={WEB3_PROVIDER}\n          onUpdate={async (state) => {\n            console.log('Dapparatus update', state)\n\n            if (state.web3Provider) {\n              state.web3 = new Web3(state.web3Provider)\n              if (state.metaAccount) {\n                state.web3.eth.accounts.wallet.add(state.metaAccount.privateKey)\n              }\n\n              this.setState(state, () => {\n                // console.log(\"state set:\",this.state)\n                if (this.state.possibleNewPrivateKey) {\n                  this.dealWithPossibleNewPrivateKey()\n                }\n              })\n            }\n          }}\n        />\n        <App\n          web3={this.state.web3}\n          address={this.state.account}\n          privateKey={this.state.metaAccount && this.state.metaAccount.privateKey}\n          network={this.state.network}\n          networkId={this.state.networkId}\n          burnMetaAccount={this.state.burnMetaAccount}\n          setPossibleNewPrivateKey={this.setPossibleNewPrivateKey.bind(this)}\n        />\n      </>\n\n    )\n  }\n}\n\nReactDOM.render(\n  <ThemeContext>\n    <KeyManager />\n  </ThemeContext>\n  , document.getElementById('root'))\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}