{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n          case 7:\n            op = _.ops.pop();\n            _.trys.pop();\n            continue;\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n              _.ops.push(op);\n              break;\n            }\n            if (t[2]) _.ops.pop();\n            _.trys.pop();\n            continue;\n        }\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) {\n    ar = ar.concat(__read(arguments[i]));\n  }\n  return ar;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar operator_1 = require(\"../services/operator\");\nvar blockchain_1 = require(\"../services/blockchain\");\nvar store_1 = require(\"../store\");\nvar wallet_1 = require(\"../wallet\");\nvar activeState_1 = require(\"../wallet/activeState\");\nvar constants_1 = require(\"../constants\");\nvar websocket_1 = require(\"../services/websocket\");\nfunction registerBulkWallets(walletsConfig) {\n  return __awaiter(this, void 0, void 0, function () {\n    var status_1, eon_1, tosHash_1, unregisteredWallets_1, bulkRequestConfig, wsNotificationsData_1, wsNotificationPromises, err_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 7,, 8]);\n          return [4, operator_1.operator.getStatus()];\n        case 1:\n          status_1 = _a.sent();\n          eon_1 = status_1.latest.eon;\n          return [4, store_1.getToSHash()];\n        case 2:\n          tosHash_1 = _a.sent();\n          unregisteredWallets_1 = [];\n          return [4, Promise.all(walletsConfig.map(function (wallet) {\n            return operator_1.operator.getWalletRegistration(wallet.address, wallet.token).catch(function () {\n              unregisteredWallets_1.push(wallet);\n            });\n          }))];\n        case 3:\n          _a.sent();\n          if (!(unregisteredWallets_1.length > 0)) return [3, 6];\n          return [4, Promise.all(unregisteredWallets_1.map(function (config) {\n            return prepareBulkRegistrationConfig(config, tosHash_1, eon_1);\n          }))];\n        case 4:\n          bulkRequestConfig = _a.sent();\n          wsNotificationsData_1 = [];\n          wsNotificationPromises = unregisteredWallets_1.map(function (config) {\n            return websocket_1.websocket.waitForEvent({\n              event: websocket_1.WSEventType.REGISTRATION_CONFIRMATION,\n              address: config.address,\n              token: config.token || store_1.store.contractAddress\n            }).then(function (websocketData) {\n              wsNotificationsData_1.push(websocketData);\n            });\n          });\n          return [4, Promise.all(__spread(wsNotificationPromises, [operator_1.operator.registerBulkWallets(bulkRequestConfig)]))];\n        case 5:\n          _a.sent();\n          bulkRequestConfig.forEach(function (config, index) {\n            wallet_1.fillWalletRegistration(config.wallet, __assign(__assign({}, wsNotificationsData_1[index].registration), {\n              hash: config.authHash\n            }));\n            wallet_1.updateWallet(config.wallet);\n          });\n          _a.label = 6;\n        case 6:\n          return [3, 8];\n        case 7:\n          err_1 = _a.sent();\n          return [2, Promise.reject(err_1)];\n        case 8:\n          return [2];\n      }\n    });\n  });\n}\nexports.default = registerBulkWallets;\nfunction prepareBulkRegistrationConfig(config, tosHash, eon) {\n  return __awaiter(this, void 0, void 0, function () {\n    var wallet, authHash, tosSignature, authSignature;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          wallet = wallet_1.createWallet(config.address, config.token || store_1.store.contractAddress, config.parentAddress);\n          authHash = activeState_1.hashActiveState({\n            token: config.token || store_1.store.contractAddress,\n            address: config.address,\n            eon: eon,\n            trailIdentifier: 0,\n            transactionSetHash: constants_1.EMPTY_HASH,\n            spent: constants_1.BN_ZERO,\n            gained: constants_1.BN_ZERO\n          });\n          return [4, blockchain_1.blockchain.sign(config.address, tosHash)];\n        case 1:\n          tosSignature = _a.sent();\n          return [4, blockchain_1.blockchain.sign(config.address, authHash)];\n        case 2:\n          authSignature = _a.sent();\n          return [2, {\n            wallet: wallet,\n            tosSignature: tosSignature,\n            authSignature: authSignature,\n            authHash: authHash\n          }];\n      }\n    });\n  });\n}","map":null,"metadata":{},"sourceType":"script"}