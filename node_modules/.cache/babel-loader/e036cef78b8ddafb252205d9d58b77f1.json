{"ast":null,"code":"var _require = require('web3-utils'),\n  toBN = _require.toBN;\nexport var getMaxOutputs = function getMaxOutputs(orders, amount) {\n  if (!orders.length) {\n    return ['0', '0'];\n  }\n  var amountRemaining = typeof amount !== 'undefined' ? toBN(amount) : toBN('0');\n  var maxIn = toBN('0');\n  var maxOut = toBN('0');\n  for (var i = 0; i < orders.length; i++) {\n    var order = orders[i];\n    if (amountRemaining.gte(toBN(order.remaining_in))) {\n      maxIn.iadd(toBN(order.remaining_in));\n      maxOut.iadd(toBN(order.remaining_out));\n    } else {\n      maxIn.iadd(toBN(amountRemaining));\n      maxOut.iadd(toBN(order.remaining_out).mul(amountRemaining).div(toBN(order.remaining_in)));\n    }\n    amountRemaining.isub(toBN(order.remaining_in));\n    if (amountRemaining.lte(toBN('0'))) {\n      break;\n    }\n  }\n  return [maxIn, maxOut];\n};\nexport var getAmountIn = function getAmountIn(orders, amountOut) {\n  return getOtherAmount(orders, amountOut, 'out');\n};\nexport var getAmountOut = function getAmountOut(orders, amountIn) {\n  return getOtherAmount(orders, amountIn, 'in');\n};\nvar getOtherAmount = function getOtherAmount(orders, amount, knownQuantity) {\n  var unknownQuantity;\n  if (knownQuantity === 'in') {\n    knownQuantity = 'remaining_in';\n    unknownQuantity = 'remaining_out';\n  } else {\n    knownQuantity = 'remaining_out';\n    unknownQuantity = 'remaining_in';\n  }\n  var amountRemaining = toBN(amount);\n  var orderIdx = 0;\n  var output = toBN('0');\n  while (amountRemaining.gt(toBN('0'))) {\n    try {\n      var order = orders[orderIdx];\n      if (amountRemaining.gte(toBN(order[knownQuantity]))) {\n        output.iadd(toBN(order[unknownQuantity]));\n      } else {\n        output.iadd(toBN(order[unknownQuantity]).mul(amountRemaining).div(toBN(order[knownQuantity])));\n      }\n      amountRemaining.isub(toBN(order[knownQuantity]));\n      orderIdx += 1;\n    } catch (e) {\n      throw new Error('Not enough liquidity on exchange');\n    }\n  }\n  return output;\n};","map":{"version":3,"names":["require","toBN","getMaxOutputs","orders","amount","length","amountRemaining","maxIn","maxOut","i","order","gte","remaining_in","iadd","remaining_out","mul","div","isub","lte","getAmountIn","amountOut","getOtherAmount","getAmountOut","amountIn","knownQuantity","unknownQuantity","orderIdx","output","gt","e","Error"],"sources":["/home/cryptodev/Dev/aegis-burner/src/utils/exchange.js"],"sourcesContent":["const { toBN } = require('web3-utils')\n\nexport const getMaxOutputs = (orders, amount) => {\n  if (!orders.length) {\n    return ['0', '0']\n  }\n  const amountRemaining = (typeof amount !== 'undefined' ? toBN(amount) : toBN('0'))\n  const maxIn = toBN('0')\n  const maxOut = toBN('0')\n  for (var i = 0; i < orders.length; i++) {\n    const order = orders[i]\n\n    if (amountRemaining.gte(toBN(order.remaining_in))) {\n      maxIn.iadd(toBN(order.remaining_in))\n      maxOut.iadd(toBN(order.remaining_out))\n    } else {\n      maxIn.iadd(toBN(amountRemaining))\n      maxOut.iadd((toBN(order.remaining_out).mul(amountRemaining)).div(toBN(order.remaining_in)))\n    }\n\n    amountRemaining.isub(toBN(order.remaining_in))\n    if (amountRemaining.lte(toBN('0'))) {\n      break\n    }\n  }\n  return [maxIn, maxOut]\n}\n\nexport const getAmountIn = (orders, amountOut) => {\n  return getOtherAmount(orders, amountOut, 'out')\n}\n\nexport const getAmountOut = (orders, amountIn) => {\n  return getOtherAmount(orders, amountIn, 'in')\n}\n\nconst getOtherAmount = (orders, amount, knownQuantity) => {\n  let unknownQuantity\n  if (knownQuantity === 'in') {\n    knownQuantity = 'remaining_in'\n    unknownQuantity = 'remaining_out'\n  } else {\n    knownQuantity = 'remaining_out'\n    unknownQuantity = 'remaining_in'\n  }\n\n  const amountRemaining = toBN(amount)\n  let orderIdx = 0\n  const output = toBN('0')\n  while (amountRemaining.gt(toBN('0'))) {\n    try {\n      const order = orders[orderIdx]\n      if (amountRemaining.gte(toBN(order[knownQuantity]))) {\n        output.iadd(toBN(order[unknownQuantity]))\n      } else {\n        output.iadd((toBN(order[unknownQuantity]).mul(amountRemaining)).div(toBN(order[knownQuantity])))\n      }\n      amountRemaining.isub(toBN(order[knownQuantity]))\n      orderIdx += 1\n    } catch (e) {\n      throw new Error('Not enough liquidity on exchange')\n    }\n  }\n  return output\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}