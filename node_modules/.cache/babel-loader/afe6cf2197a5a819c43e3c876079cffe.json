{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar store_1 = require(\"../store\");\nvar utils_1 = require(\"../helpers/utils\");\nvar storage_1 = require(\"../services/storage\");\nvar signature_1 = require(\"./signature\");\nvar eon_1 = require(\"./eon\");\nexports.getWallet = function (address, token) {\n  return store_1.store.wallets.get(utils_1.defineWalletKey(address, token));\n};\nfunction updateWallet(wallet) {\n  store_1.store.wallets.set(utils_1.defineWalletKey(wallet.address, wallet.token), wallet);\n  storage_1.storage.queueWalletStorage(wallet);\n}\nexports.updateWallet = updateWallet;\nexports.createWallet = function (address, token, parentAddress) {\n  return {\n    address: address,\n    token: token,\n    isRegistered: false,\n    parentAddress: parentAddress\n  };\n};\nfunction fillWalletRegistration(wallet, data) {\n  if (wallet.isRegistered) throw new Error('[INTERNAL] Wallet is already registered!');\n  wallet.registrationSignature = signature_1.createSignature(wallet.address, data.hash, data.walletSignature);\n  wallet.operatorRegistrationSignature = signature_1.createSignature(store_1.store.contractOwner, data.hash, data.operatorSignature);\n  wallet.isRegistered = true;\n  wallet.registrationEon = data.eon;\n  wallet.trailIdentifier = data.trailIdentifier;\n  wallet.currentEon = new eon_1.Eon(wallet, data.eon);\n}\nexports.fillWalletRegistration = fillWalletRegistration;","map":null,"metadata":{},"sourceType":"script"}