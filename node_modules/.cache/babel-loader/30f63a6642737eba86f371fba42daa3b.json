{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n          case 7:\n            op = _.ops.pop();\n            _.trys.pop();\n            continue;\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n              _.ops.push(op);\n              break;\n            }\n            if (t[2]) _.ops.pop();\n            _.trys.pop();\n            continue;\n        }\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) {\n    ar = ar.concat(__read(arguments[i]));\n  }\n  return ar;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar mobx_1 = require(\"mobx\");\nvar transaction_1 = require(\"./transaction\");\nvar merkleTree_1 = require(\"./merkleTree\");\nvar activeState_1 = require(\"./activeState\");\nvar constants_1 = require(\"../constants\");\nvar nocust_1 = require(\"../nocust\");\nvar swaps_1 = require(\"../services/swaps\");\nvar operator_1 = require(\"../services/operator\");\nvar syncWallet_1 = require(\"./syncWallet\");\nvar async_mutex_1 = require(\"async-mutex\");\nvar Eon = function () {\n  function Eon(wallet, number) {\n    var _this = this;\n    this.reactionLock = new async_mutex_1.Mutex();\n    this.wallet = wallet;\n    this.eon = number;\n    this.membershipProofPath = [];\n    this.accountProof = {\n      root: null,\n      path: [],\n      pathValues: [],\n      left: constants_1.BN_ZERO,\n      right: constants_1.BN_ZERO,\n      trailIdentifier: this.wallet.trailIdentifier,\n      leafChecksum: null,\n      totalAllotment: null\n    };\n    this.deposits = [];\n    this.transactions = [];\n    mobx_1.reaction(function () {\n      return _this.lastTransaction;\n    }, this.finalizeAndHarvestLocked.bind(this));\n  }\n  Object.defineProperty(Eon.prototype, \"activeTransactions\", {\n    get: function get() {\n      var _this = this;\n      return this.transactions.filter(function (t) {\n        return !t.voided && !(!t.swap && t.recipient.address === _this.wallet.address);\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Eon.prototype, \"lastTransaction\", {\n    get: function get() {\n      return __spread(this.activeTransactions).pop();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Eon.prototype, \"outgoingTransactions\", {\n    get: function get() {\n      var _this = this;\n      return this.transactions.filter(function (t) {\n        return t.sender.address === _this.wallet.address && t.sender.token === _this.wallet.token;\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Eon.prototype, \"incomingTransactions\", {\n    get: function get() {\n      var _this = this;\n      return this.transactions.filter(function (t) {\n        return t.recipient.address === _this.wallet.address && t.recipient.token === _this.wallet.token;\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Eon.prototype, \"passiveAmountReceived\", {\n    get: function get() {\n      return this.incomingTransactions.filter(function (t) {\n        return !t.swap;\n      }).reduce(function (sum, t) {\n        return sum.plus(t.amount);\n      }, constants_1.BN_ZERO);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Eon.prototype, \"spentAndGained\", {\n    get: function get() {\n      if (!this.lastTransaction) {\n        return {\n          spent: constants_1.BN_ZERO,\n          gained: constants_1.BN_ZERO\n        };\n      }\n      var isOutgoing = this.wallet.address === this.lastTransaction.sender.address && this.wallet.token === this.lastTransaction.sender.token;\n      if (this.lastTransaction.swap && !this.lastTransaction.recipientFinalizationActiveState && !this.lastTransaction.cancelled && !this.lastTransaction.voided) {\n        var currentMatchedAmounts = this.eonMatchedAmounts(this.lastTransaction);\n        if (isOutgoing) {\n          var spent = this.lastTransaction.senderActiveState.spent;\n          var gained = this.lastTransaction.senderActiveState.gained.plus(this.lastTransaction.amount).minus(currentMatchedAmounts.out);\n          return {\n            spent: spent,\n            gained: gained\n          };\n        } else {\n          var spent = this.lastTransaction.recipientActiveState.spent;\n          var gained = this.lastTransaction.recipientActiveState.gained.plus(currentMatchedAmounts.in);\n          return {\n            spent: spent,\n            gained: gained\n          };\n        }\n      } else {\n        var lastTransactionState = transaction_1.getTransactionActiveState(this.lastTransaction, isOutgoing);\n        var spent = lastTransactionState.spent;\n        var gained = lastTransactionState.gained;\n        if (this.lastTransaction.swap) {\n          var currentMatchedAmounts = this.eonMatchedAmounts(this.lastTransaction);\n          if (this.lastTransaction.complete && isOutgoing) {\n            var totalMatchedOut = this.lastTransaction.matchedAmounts.out;\n            gained = gained.plus(totalMatchedOut.minus(currentMatchedAmounts.out));\n          }\n          if (this.lastTransaction.cancelled && !this.lastTransaction.recipientCancellationActiveState && !isOutgoing) {\n            gained = gained.plus(currentMatchedAmounts.in);\n          }\n        }\n        return {\n          spent: spent,\n          gained: gained\n        };\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Eon.prototype, \"deposited\", {\n    get: function get() {\n      return this.deposits.reduce(function (sum, deposit) {\n        return sum.plus(deposit.amount);\n      }, constants_1.BN_ZERO);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Eon.prototype, \"initialBalanceAllotment\", {\n    get: function get() {\n      return this.accountProof.right.minus(this.accountProof.left);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Eon.prototype, \"balance\", {\n    get: function get() {\n      return this.initialBalanceAllotment.plus(this.deposited).plus(this.passiveAmountReceived).plus(this.spentAndGained.gained).minus(this.spentAndGained.spent);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Eon.prototype, \"activeTree\", {\n    get: function get() {\n      var _this = this;\n      return merkleTree_1.constructMerkleTree(this.activeTransactions.map(function (t) {\n        return transaction_1.transactionToMerkleTree(t, _this.wallet, _this.lastTransaction);\n      }));\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Eon.prototype, \"passiveTree\", {\n    get: function get() {\n      var _this = this;\n      return merkleTree_1.constructMerkleTree(this.incomingTransactions.map(function (t) {\n        return transaction_1.transactionToMerkleTree(t, _this.wallet, _this.lastTransaction);\n      }));\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Eon.prototype, \"activeState\", {\n    get: function get() {\n      return {\n        address: this.wallet.address,\n        token: this.wallet.token,\n        eon: this.eon,\n        trailIdentifier: this.accountProof.trailIdentifier,\n        transactionSetHash: this.activeTree.hash,\n        spent: this.spentAndGained.spent,\n        gained: this.spentAndGained.gained\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Eon.prototype, \"passiveAggregate\", {\n    get: function get() {\n      return {\n        passiveTreeRoot: this.passiveTree.hash,\n        passiveAmountReceived: this.passiveAmountReceived,\n        lastOutgoingTransferPassiveMarker: this.outgoingTransactions.length > 0 ? this.outgoingTransactions[this.outgoingTransactions.length - 1].passiveMarker : constants_1.BN_ZERO\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Eon.prototype, \"isAvailableForSwaps\", {\n    get: function get() {\n      var isAvailable = true;\n      if (this.lastTransaction && this.lastTransaction.swap) {\n        var swap = this.lastTransaction;\n        var isPending = !swap.complete && !swap.senderCancellationActiveState && !swap.voided;\n        if (isPending) {\n          return false;\n        }\n      }\n      return isAvailable;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Eon.prototype.eonMatchedAmounts = function (swap) {\n    var _a = swap.matchedAmounts,\n      totalIn = _a.in,\n      totalOut = _a.out;\n    if (!this.wallet.previousEon) {\n      return {\n        in: totalIn,\n        out: totalOut\n      };\n    }\n    var prevEonSwap = this.wallet.previousEon.transactions.find(function (t) {\n      return t.txId === swap.txId;\n    });\n    if (!prevEonSwap) {\n      return {\n        in: totalIn,\n        out: totalOut\n      };\n    }\n    var _b = prevEonSwap.matchedAmounts,\n      prevIn = _b.in,\n      prevOut = _b.out;\n    return {\n      in: totalIn.minus(prevIn),\n      out: totalOut.minus(prevOut)\n    };\n  };\n  Eon.prototype.finalizeAndHarvestLocked = function () {\n    var _this = this;\n    return this.reactionLock.runExclusive(function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          return [2, this.finalizeAndHarvest.bind(this)()];\n        });\n      });\n    });\n  };\n  Eon.prototype.finalizeAndHarvest = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var txLength, swap, isIncoming, wallet, finalizationSignatures, swapFinalization, e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 8,, 9]);\n            if (!this.isAvailableForSwaps) return [3, 7];\n            txLength = this.transactions.length;\n            if (!(txLength > 0 && this.transactions[txLength - 1].swap)) return [3, 7];\n            swap = this.transactions[txLength - 1];\n            isIncoming = this.wallet.token === swap.recipient.token;\n            if (!(isIncoming && swap.complete && !swap.recipientFinalizationActiveState)) return [3, 5];\n            console.log('Finalizing >>>>>>>', this.wallet.address, this.wallet.token);\n            return [4, nocust_1.nocust.getWallet(this.wallet.address, this.wallet.token)];\n          case 1:\n            wallet = _a.sent();\n            return [4, swaps_1.createFinalizationSignatures(wallet, swap)];\n          case 2:\n            finalizationSignatures = _a.sent().finalizationSignatures;\n            return [4, operator_1.operator.sendSwapFinalization(swap.id, finalizationSignatures)];\n          case 3:\n            swapFinalization = _a.sent();\n            return [4, syncWallet_1.syncWallet(wallet, syncWallet_1.SyncWalletEvent.SYNC_SWAP_FINALIZATION, swapFinalization)];\n          case 4:\n            _a.sent();\n            console.log('Successfully Finalized >>>>>>>', this.wallet.address, this.wallet.token);\n            _a.label = 5;\n          case 5:\n            if (!(this.balance.gt(0) && (swap.recipientFinalizationActiveState || swap.recipientCancellationActiveState))) return [3, 7];\n            console.log('Harvesting >>>>>>>', this.wallet.address, this.wallet.token);\n            return [4, nocust_1.nocust.transfer({\n              amount: this.balance,\n              from: this.wallet.address,\n              to: this.wallet.parentAddress,\n              token: this.wallet.token\n            })];\n          case 6:\n            _a.sent();\n            console.log('Successfully Harvested >>>>>>>', this.wallet.address, this.wallet.token);\n            _a.label = 7;\n          case 7:\n            return [3, 9];\n          case 8:\n            e_1 = _a.sent();\n            console.log(\"Error occurred while trying to finalize/harvest \" + this.wallet.token + \"/\" + this.wallet.address, e_1);\n            return [3, 9];\n          case 9:\n            return [2];\n        }\n      });\n    });\n  };\n  Eon.prototype.clone = function () {\n    var eon = new Eon(this.wallet, this.eon);\n    eon.accountProof = __assign({}, this.accountProof);\n    eon.membershipProofPath = this.membershipProofPath;\n    eon.deposits = __spread(this.deposits);\n    eon.transactions = __spread(this.transactions);\n    return eon;\n  };\n  Eon.prototype.toJSON = function () {\n    return {\n      eon: this.eon,\n      membershipProofPath: this.membershipProofPath,\n      accountProof: this.accountProof,\n      deposits: this.deposits,\n      transactions: this.transactions,\n      withdrawalRequest: this.withdrawalRequest,\n      withdrawal: this.withdrawal\n    };\n  };\n  Object.defineProperty(Eon.prototype, \"proofOfExclusiveBalanceAllotment\", {\n    get: function get() {\n      return {\n        token: this.wallet.token,\n        activeStateHash: activeState_1.hashActiveState(this.activeState, true),\n        accountProof: this.accountProof,\n        membershipProofPath: this.membershipProofPath,\n        passiveAggregate: this.passiveAggregate\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n  __decorate([mobx_1.observable], Eon.prototype, \"deposits\", void 0);\n  __decorate([mobx_1.observable], Eon.prototype, \"transactions\", void 0);\n  __decorate([mobx_1.observable], Eon.prototype, \"withdrawalRequest\", void 0);\n  __decorate([mobx_1.observable], Eon.prototype, \"withdrawal\", void 0);\n  __decorate([mobx_1.computed], Eon.prototype, \"activeTransactions\", null);\n  __decorate([mobx_1.computed], Eon.prototype, \"lastTransaction\", null);\n  __decorate([mobx_1.computed], Eon.prototype, \"outgoingTransactions\", null);\n  __decorate([mobx_1.computed], Eon.prototype, \"incomingTransactions\", null);\n  __decorate([mobx_1.computed], Eon.prototype, \"passiveAmountReceived\", null);\n  __decorate([mobx_1.computed], Eon.prototype, \"spentAndGained\", null);\n  __decorate([mobx_1.computed], Eon.prototype, \"deposited\", null);\n  __decorate([mobx_1.computed], Eon.prototype, \"initialBalanceAllotment\", null);\n  __decorate([mobx_1.computed], Eon.prototype, \"balance\", null);\n  __decorate([mobx_1.computed], Eon.prototype, \"activeTree\", null);\n  __decorate([mobx_1.computed], Eon.prototype, \"passiveTree\", null);\n  __decorate([mobx_1.computed], Eon.prototype, \"activeState\", null);\n  __decorate([mobx_1.computed], Eon.prototype, \"passiveAggregate\", null);\n  __decorate([mobx_1.computed], Eon.prototype, \"isAvailableForSwaps\", null);\n  __decorate([mobx_1.computed], Eon.prototype, \"proofOfExclusiveBalanceAllotment\", null);\n  return Eon;\n}();\nexports.Eon = Eon;","map":null,"metadata":{},"sourceType":"script"}