{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n          case 7:\n            op = _.ops.pop();\n            _.trys.pop();\n            continue;\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n              _.ops.push(op);\n              break;\n            }\n            if (t[2]) _.ops.pop();\n            _.trys.pop();\n            continue;\n        }\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) {\n    ar = ar.concat(__read(arguments[i]));\n  }\n  return ar;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar web3_1 = __importDefault(require(\"web3\"));\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nvar nocustAbi_1 = require(\"../helpers/nocustAbi\");\nvar erc20Abi_1 = require(\"../helpers/erc20Abi\");\nvar signature_1 = require(\"../wallet/signature\");\nvar store_1 = require(\"../store\");\nvar nocustContract;\nvar erc20Contracts = new Map();\nfunction init(rpcUrl, contractAddress) {\n  exports.web3 = new web3_1.default(new web3_1.default.providers.HttpProvider(rpcUrl));\n  nocustContract = new exports.web3.eth.Contract(nocustAbi_1.NOCUST_ABI, contractAddress);\n}\nvar addedAccounts = [];\nfunction addPrivateKey(privateKey) {\n  var wallet = exports.web3.eth.accounts.wallet.add(privateKey);\n  addedAccounts.push(wallet.address.toLowerCase());\n  return wallet.address;\n}\nvar isPrivateKeyAdded = function isPrivateKeyAdded(address) {\n  return addedAccounts.includes(address.toLowerCase());\n};\nvar getBlockNumber = function getBlockNumber() {\n  return __awaiter(void 0, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      return [2, exports.web3.eth.getBlockNumber()];\n    });\n  });\n};\nfunction getETHBalance(address) {\n  return __awaiter(this, void 0, void 0, function () {\n    var balance, e_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n          return [4, exports.web3.eth.getBalance(address)];\n        case 1:\n          balance = _a.sent();\n          return [2, new bignumber_js_1.default(balance)];\n        case 2:\n          e_1 = _a.sent();\n          return [2, Promise.reject(e_1)];\n        case 3:\n          return [2];\n      }\n    });\n  });\n}\nfunction getERC20Balance(address, token) {\n  return __awaiter(this, void 0, void 0, function () {\n    var contract, balance, e_2;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n          contract = getErc20Contract(token);\n          return [4, contract.methods.balanceOf(address).call()];\n        case 1:\n          balance = _a.sent();\n          return [2, new bignumber_js_1.default(balance)];\n        case 2:\n          e_2 = _a.sent();\n          return [2, Promise.reject(e_2)];\n        case 3:\n          return [2];\n      }\n    });\n  });\n}\nvar callNocustMethod = function callNocustMethod(name, params) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a;\n    return __generator(this, function (_b) {\n      return [2, (_a = nocustContract.methods)[name].apply(_a, __spread(params || [])).call()];\n    });\n  });\n};\nvar estimateGasOfNocustMethod = function estimateGasOfNocustMethod(name, from, value, params) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a;\n    return __generator(this, function (_b) {\n      return [2, (_a = nocustContract.methods)[name].apply(_a, __spread(params || [])).estimateGas({\n        from: from,\n        value: value\n      })];\n    });\n  });\n};\nfunction sendNocustMethod(config) {\n  return __awaiter(this, void 0, void 0, function () {\n    var address, gasPrice, gasLimit, name, amount, _a, params, nonce, data;\n    var _b;\n    return __generator(this, function (_c) {\n      address = config.address, gasPrice = config.gasPrice, gasLimit = config.gasLimit, name = config.name, amount = config.amount, _a = config.params, params = _a === void 0 ? [] : _a, nonce = config.nonce;\n      data = {\n        from: address,\n        gasPrice: gasPrice,\n        gas: gasLimit\n      };\n      if (nonce) {\n        data.nonce = nonce;\n      }\n      if (amount) {\n        data.value = amount;\n      }\n      return [2, (_b = nocustContract.methods)[name].apply(_b, __spread(params)).send(data)];\n    });\n  });\n}\nvar callERC20Method = function callERC20Method(token, name, params) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a;\n    return __generator(this, function (_b) {\n      return [2, (_a = getErc20Contract(token).methods)[name].apply(_a, __spread(params || [])).call()];\n    });\n  });\n};\nfunction sendERC20Method(config) {\n  return __awaiter(this, void 0, void 0, function () {\n    var address, gasPrice, gasLimit, token, name, _a, params;\n    var _b;\n    return __generator(this, function (_c) {\n      address = config.address, gasPrice = config.gasPrice, gasLimit = config.gasLimit, token = config.token, name = config.name, _a = config.params, params = _a === void 0 ? [] : _a;\n      return [2, (_b = getErc20Contract(token).methods)[name].apply(_b, __spread(params)).send({\n        from: address,\n        gasPrice: gasPrice,\n        gas: gasLimit\n      })];\n    });\n  });\n}\nfunction getErc20Contract(token) {\n  var contract = erc20Contracts.get(token);\n  if (!contract) {\n    contract = new exports.web3.eth.Contract(erc20Abi_1.ERC20_ABI, token);\n    erc20Contracts.set(token, contract);\n  }\n  return contract;\n}\nfunction sign(address, hash) {\n  return __awaiter(this, void 0, void 0, function () {\n    var signature;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          hash = preprocessNocustSign(hash);\n          return [4, exports.web3.eth.sign(hash, address)];\n        case 1:\n          signature = _a.sent();\n          return [2, signature_1.createSignature(address, hash, signature)];\n      }\n    });\n  });\n}\nvar validateSignature = function validateSignature(hash, signature, address) {\n  return exports.web3.eth.accounts.recover(preprocessNocustSign(hash), '0x' + signature) === address;\n};\nvar preprocessNocustSign = function preprocessNocustSign(data) {\n  return web3_1.default.utils.soliditySha3('\\x19Liquidity.Network Authorization:\\n32', data);\n};\nvar sendEther = function sendEther(_a) {\n  var from = _a.from,\n    to = _a.to,\n    amount = _a.amount,\n    gasPrice = _a.gasPrice;\n  return __awaiter(void 0, void 0, void 0, function () {\n    return __generator(this, function (_b) {\n      return [2, exports.web3.eth.sendTransaction({\n        from: from,\n        to: to,\n        gas: 200000,\n        gasPrice: gasPrice,\n        value: amount\n      })];\n    });\n  });\n};\nvar sendERC20 = function sendERC20(_a) {\n  var from = _a.from,\n    to = _a.to,\n    token = _a.token,\n    amount = _a.amount,\n    gasPrice = _a.gasPrice;\n  return __awaiter(void 0, void 0, void 0, function () {\n    return __generator(this, function (_b) {\n      return [2, sendERC20Method({\n        name: 'transfer',\n        address: from,\n        gasPrice: gasPrice,\n        gasLimit: 200000,\n        token: token,\n        params: [to, amount]\n      })];\n    });\n  });\n};\nvar fetchNetworkId = function fetchNetworkId() {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, e_3;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          _b.trys.push([0, 2,, 3]);\n          _a = store_1.store;\n          return [4, exports.web3.eth.net.getId()];\n        case 1:\n          _a.networkId = _b.sent();\n          return [3, 3];\n        case 2:\n          e_3 = _b.sent();\n          return [2, Promise.reject(e_3)];\n        case 3:\n          return [2];\n      }\n    });\n  });\n};\nvar fetchEVMRevertMessage = function fetchEVMRevertMessage(txId) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var revertId, tx, txResult;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          revertId = '0x08c379a0';\n          return [4, exports.web3.eth.getTransaction(txId)];\n        case 1:\n          tx = _a.sent();\n          console.log('tx', tx);\n          if (!tx) throw new Error('[EVM REVERT] The transaction does not exist');\n          return [4, exports.web3.eth.call({\n            from: tx.from,\n            to: tx.to,\n            data: tx.input,\n            gas: tx.gas,\n            gasPrice: tx.gasPrice,\n            value: tx.value,\n            nonce: tx.nonce\n          }, tx.blockNumber)];\n        case 2:\n          txResult = _a.sent();\n          console.log('txResult', txResult);\n          if (txResult.search(revertId) === -1) {\n            throw new Error('[EVM REVERT] The transaction did not revert');\n          }\n          return [2, exports.web3.utils.hexToAscii('0x' + txResult.slice(revertId.length))];\n      }\n    });\n  });\n};\nexports.blockchain = {\n  addPrivateKey: addPrivateKey,\n  callERC20Method: callERC20Method,\n  callNocustMethod: callNocustMethod,\n  fetchEVMRevertMessage: fetchEVMRevertMessage,\n  getBlockNumber: getBlockNumber,\n  getETHBalance: getETHBalance,\n  getERC20Balance: getERC20Balance,\n  fetchNetworkId: fetchNetworkId,\n  init: init,\n  isPrivateKeyAdded: isPrivateKeyAdded,\n  sendERC20Method: sendERC20Method,\n  sendNocustMethod: sendNocustMethod,\n  sendEther: sendEther,\n  sendERC20: sendERC20,\n  sign: sign,\n  validateSignature: validateSignature,\n  estimateGasOfNocustMethod: estimateGasOfNocustMethod\n};","map":null,"metadata":{},"sourceType":"script"}