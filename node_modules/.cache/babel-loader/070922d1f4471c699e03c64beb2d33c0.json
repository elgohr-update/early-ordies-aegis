{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n          case 7:\n            op = _.ops.pop();\n            _.trys.pop();\n            continue;\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n              _.ops.push(op);\n              break;\n            }\n            if (t[2]) _.ops.pop();\n            _.trys.pop();\n            continue;\n        }\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nvar activeState_1 = require(\"./activeState\");\nvar blockchain_1 = require(\"../services/blockchain\");\nvar operator_1 = require(\"../services/operator\");\nvar transformers_1 = require(\"../services/operator/transformers\");\nvar eon_1 = require(\"./eon\");\nvar nocust_1 = require(\"../nocust\");\nvar _1 = require(\".\");\nvar constants_1 = require(\"../constants\");\nvar SyncWalletEvent;\n(function (SyncWalletEvent) {\n  SyncWalletEvent[\"RECONSTRUCT\"] = \"RECONSTRUCT\";\n  SyncWalletEvent[\"FULL_SYNC\"] = \"FULL_SYNC\";\n  SyncWalletEvent[\"INCREMENT_EON\"] = \"INCREMENT_EON\";\n  SyncWalletEvent[\"SYNC_DEPOSITS\"] = \"SYNC_DEPOSITS\";\n  SyncWalletEvent[\"SYNC_TRANSACTIONS\"] = \"SYNC_TRANSACTIONS\";\n  SyncWalletEvent[\"SYNC_SWAP_CANCELLATION\"] = \"SYNC_SWAP_CANCELLATION\";\n  SyncWalletEvent[\"SYNC_SWAP_FINALIZATION\"] = \"SYNC_SWAP_FINALIZATION\";\n  SyncWalletEvent[\"SYNC_SWAP_FREEZE\"] = \"SYNC_SWAP_FREEZE\";\n})(SyncWalletEvent = exports.SyncWalletEvent || (exports.SyncWalletEvent = {}));\nfunction syncWallet(wallet, event, data) {\n  return __awaiter(this, void 0, void 0, function () {\n    var _a, e_1;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          _b.trys.push([0, 12,, 13]);\n          if (!blockchain_1.blockchain.isPrivateKeyAdded(wallet.address)) {\n            return [2];\n          }\n          _a = event;\n          switch (_a) {\n            case SyncWalletEvent.RECONSTRUCT:\n              return [3, 1];\n            case SyncWalletEvent.FULL_SYNC:\n              return [3, 3];\n            case SyncWalletEvent.INCREMENT_EON:\n              return [3, 5];\n            case SyncWalletEvent.SYNC_DEPOSITS:\n              return [3, 6];\n            case SyncWalletEvent.SYNC_TRANSACTIONS:\n              return [3, 7];\n            case SyncWalletEvent.SYNC_SWAP_CANCELLATION:\n              return [3, 8];\n            case SyncWalletEvent.SYNC_SWAP_FINALIZATION:\n              return [3, 9];\n            case SyncWalletEvent.SYNC_SWAP_FREEZE:\n              return [3, 10];\n          }\n          return [3, 11];\n        case 1:\n          return [4, reconstruct(wallet)];\n        case 2:\n          _b.sent();\n          return [3, 11];\n        case 3:\n          return [4, syncFull(wallet)];\n        case 4:\n          _b.sent();\n          return [3, 11];\n        case 5:\n          incrementEon(wallet, data);\n          return [3, 11];\n        case 6:\n          syncDeposits(wallet, data);\n          return [3, 11];\n        case 7:\n          syncTransactions(wallet, data);\n          return [3, 11];\n        case 8:\n          syncSwapCancellation(wallet, data);\n          return [3, 11];\n        case 9:\n          syncSwapFinalization(wallet, data);\n          return [3, 11];\n        case 10:\n          syncSwapFreeze(wallet, data);\n          return [3, 11];\n        case 11:\n          _1.updateWallet(wallet);\n          return [3, 13];\n        case 12:\n          e_1 = _b.sent();\n          return [2, Promise.reject(e_1)];\n        case 13:\n          return [2];\n      }\n    });\n  });\n}\nexports.syncWallet = syncWallet;\nfunction reconstruct(wallet) {\n  return __awaiter(this, void 0, void 0, function () {\n    var address, token, eon, walletState, e_2;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 4,, 5]);\n          address = wallet.address, token = wallet.token;\n          return [4, nocust_1.nocust.getEon()];\n        case 1:\n          eon = _a.sent();\n          return [4, operator_1.operator.fetchWalletState({\n            address: address,\n            token: token,\n            eon: eon\n          })];\n        case 2:\n          walletState = _a.sent();\n          syncRegistration(wallet, walletState.registration);\n          return [4, syncFull(wallet, walletState)];\n        case 3:\n          _a.sent();\n          return [3, 5];\n        case 4:\n          e_2 = _a.sent();\n          console.log(e_2);\n          return [2, Promise.reject(e_2)];\n        case 5:\n          return [2];\n      }\n    });\n  });\n}\nfunction syncFull(wallet, walletState) {\n  return __awaiter(this, void 0, void 0, function () {\n    var address, token, currentEon, currentEonNumber;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          address = wallet.address, token = wallet.token, currentEon = wallet.currentEon;\n          return [4, nocust_1.nocust.getEon()];\n        case 1:\n          currentEonNumber = _a.sent();\n          if (!!walletState) return [3, 3];\n          return [4, operator_1.operator.fetchWalletState({\n            address: address,\n            token: token,\n            eon: currentEonNumber\n          })];\n        case 2:\n          walletState = _a.sent();\n          _a.label = 3;\n        case 3:\n          if (!(currentEonNumber === wallet.registrationEon)) return [3, 4];\n          return [3, 7];\n        case 4:\n          if (!(currentEonNumber - currentEon.eon > 1)) return [3, 6];\n          console.log('[WARNING] You missed eon synchronization, fetching wallet from operator without integrity check');\n          return [4, setNewEons(wallet, walletState, currentEonNumber)];\n        case 5:\n          _a.sent();\n          return [3, 7];\n        case 6:\n          if (currentEonNumber === currentEon.eon) {} else {\n            incrementEon(wallet, walletState);\n          }\n          _a.label = 7;\n        case 7:\n          syncDeposits(wallet, walletState.deposits);\n          syncTransactions(wallet, {\n            payloads: walletState.transactions\n          });\n          return [2];\n      }\n    });\n  });\n}\nfunction returnEon(wallet, walletState) {\n  if (!walletState.merkleProof) {\n    console.log('No data to increment eon');\n    return;\n  }\n  var operatorEonData = walletState.merkleProof;\n  var newEon = new eon_1.Eon(wallet, operatorEonData.eon);\n  newEon.membershipProofPath = operatorEonData.membershipChain;\n  newEon.accountProof.left = new bignumber_js_1.default(operatorEonData.left);\n  newEon.accountProof.right = new bignumber_js_1.default(operatorEonData.right);\n  newEon.accountProof.path = operatorEonData.allotmentChain;\n  newEon.accountProof.pathValues = operatorEonData.values.map(function (v) {\n    return new bignumber_js_1.default(v);\n  });\n  return newEon;\n}\nfunction setNewEons(wallet, walletState, currentEonNumber) {\n  return __awaiter(this, void 0, void 0, function () {\n    var address, token, previousWalletState, e_3;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n          address = wallet.address, token = wallet.token;\n          return [4, operator_1.operator.fetchWalletState({\n            address: address,\n            token: token,\n            eon: currentEonNumber - 1\n          })];\n        case 1:\n          previousWalletState = _a.sent();\n          wallet.previousEon = returnEon(wallet, previousWalletState);\n          syncTransactions(wallet, {\n            payloads: previousWalletState.transactions\n          }, false);\n          wallet.currentEon = returnEon(wallet, walletState);\n          return [3, 3];\n        case 2:\n          e_3 = _a.sent();\n          console.log(e_3);\n          return [2, Promise.reject(e_3)];\n        case 3:\n          return [2];\n      }\n    });\n  });\n}\nfunction incrementEon(wallet, walletState) {\n  if (!walletState.merkleProof) {\n    console.log('No data to increment eon');\n    return;\n  }\n  var operatorEonData = walletState.merkleProof;\n  if (wallet.currentEon.eon !== wallet.registrationEon && wallet.currentEon.eon >= operatorEonData.eon) {\n    console.log('[ERROR] Local data has already been updated for new eon');\n    return;\n  }\n  var newEon = returnEon(wallet, walletState);\n  wallet.previousEon = wallet.currentEon;\n  wallet.currentEon = newEon;\n  syncDeposits(wallet, walletState.deposits);\n  syncTransactions(wallet, {\n    payloads: walletState.transactions\n  });\n}\nfunction syncDeposits(wallet, deposits) {\n  var currentEon = wallet.currentEon;\n  deposits.forEach(function (deposit) {\n    var existingDeposit = currentEon.deposits.find(function (d) {\n      return d.txId === deposit.txId;\n    });\n    if (!existingDeposit && deposit.eon === currentEon.eon) {\n      currentEon.deposits.push(transformers_1.transformDepositFromServer(deposit));\n    }\n  });\n}\nfunction syncTransactions(wallet, data, isCurrentEon) {\n  if (isCurrentEon === void 0) {\n    isCurrentEon = true;\n  }\n  var walletPayload = isCurrentEon ? wallet.currentEon : wallet.previousEon;\n  data.payloads.forEach(function (transactionPayload) {\n    if (transactionPayload.eon === walletPayload.eon) {\n      var txIndex = walletPayload.transactions.findIndex(function (t) {\n        return t.id === transactionPayload.id;\n      });\n      if (txIndex === -1) {\n        walletPayload.transactions.push(transformers_1.transformTransactionFromServer(transactionPayload));\n      } else {\n        var transaction = walletPayload.transactions[txIndex];\n        walletPayload.transactions[txIndex] = __assign(__assign({}, transaction), transformers_1.transformTransactionFromServer(transactionPayload));\n      }\n    }\n  });\n}\nfunction syncRegistration(wallet, registration) {\n  var address = wallet.address,\n    token = wallet.token;\n  var hash = activeState_1.hashActiveState({\n    token: token,\n    address: address,\n    eon: registration.eon,\n    trailIdentifier: 0,\n    transactionSetHash: constants_1.EMPTY_HASH,\n    spent: new bignumber_js_1.default(0),\n    gained: new bignumber_js_1.default(0)\n  });\n  var isRegistrationValid = blockchain_1.blockchain.validateSignature(hash, registration.walletSignature, address);\n  if (isRegistrationValid) {\n    _1.fillWalletRegistration(wallet, __assign(__assign({}, registration), {\n      hash: hash\n    }));\n  } else {\n    throw new Error('[INTERNAL] Registration signature from operator does not match');\n  }\n}\nfunction syncSwapCancellation(wallet, swapCancellation) {\n  var swapIndex = wallet.currentEon.transactions.findIndex(function (transaction) {\n    return transaction.id === swapCancellation.id;\n  });\n  if (swapIndex !== -1) {\n    var walletId = {\n      address: wallet.address,\n      token: wallet.token,\n      trailIdentifier: wallet.trailIdentifier\n    };\n    var senderCancellationActiveState = swapCancellation.senderCancellationActiveState,\n      recipientCancellationActiveState = swapCancellation.recipientCancellationActiveState;\n    wallet.currentEon.transactions[swapIndex] = __assign(__assign({}, wallet.currentEon.transactions[swapIndex]), {\n      senderCancellationActiveState: transformers_1.transformActiveStateFromServer(walletId, wallet.currentEon.eon, senderCancellationActiveState),\n      recipientCancellationActiveState: wallet.currentEon.transactions[swapIndex].recipientCancellationActiveState = transformers_1.transformActiveStateFromServer(walletId, wallet.currentEon.eon, recipientCancellationActiveState),\n      cancelled: true\n    });\n  }\n}\nfunction syncSwapFinalization(wallet, swapFinalization) {\n  var swapIndex = wallet.currentEon.transactions.findIndex(function (transaction) {\n    return transaction.id === swapFinalization.id;\n  });\n  if (swapIndex !== -1) {\n    var walletId = {\n      address: wallet.address,\n      token: wallet.token,\n      trailIdentifier: wallet.trailIdentifier\n    };\n    var recipientFinalizationActiveState = swapFinalization.recipientFinalizationActiveState;\n    wallet.currentEon.transactions[swapIndex] = __assign(__assign({}, wallet.currentEon.transactions[swapIndex]), {\n      recipientFinalizationActiveState: transformers_1.transformActiveStateFromServer(walletId, wallet.currentEon.eon, recipientFinalizationActiveState)\n    });\n  }\n}\nfunction syncSwapFreeze(wallet, swapFreeze) {\n  var swapIndex = wallet.currentEon.transactions.findIndex(function (transaction) {\n    return transaction.id === swapFreeze.id;\n  });\n  if (swapIndex !== -1) {\n    var matchedAmounts = swapFreeze.matchedAmounts;\n    wallet.currentEon.transactions[swapIndex] = __assign(__assign({}, wallet.currentEon.transactions[swapIndex]), {\n      matchedAmounts: {\n        in: new bignumber_js_1.default(matchedAmounts.matchedIn),\n        out: new bignumber_js_1.default(matchedAmounts.matchedOut)\n      },\n      cancelled: true\n    });\n  }\n}","map":null,"metadata":{},"sourceType":"script"}