{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n          case 7:\n            op = _.ops.pop();\n            _.trys.pop();\n            continue;\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n              _.ops.push(op);\n              break;\n            }\n            if (t[2]) _.ops.pop();\n            _.trys.pop();\n            continue;\n        }\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nvar store_1 = require(\"../store\");\nvar blockchain_1 = require(\"./blockchain\");\nvar utils_1 = require(\"../helpers/utils\");\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar getParentChainBalance_1 = __importDefault(require(\"../nocust/getParentChainBalance\"));\nvar constants_1 = require(\"../constants\");\nvar DEPOSIT_GAS_LIMIT = 300000;\nvar WITHDRAWAL_REQUEST_GAS_LIMIT = 1000000;\nvar RESPONSE_GAS = 100100;\nfunction deposit(config) {\n  return __awaiter(this, void 0, void 0, function () {\n    var address, token, amount, gasPrice, nonce;\n    return __generator(this, function (_a) {\n      address = config.address, token = config.token, amount = config.amount, gasPrice = config.gasPrice, nonce = config.nonce;\n      return [2, blockchain_1.blockchain.sendNocustMethod({\n        name: 'deposit',\n        address: address,\n        params: [token, address, amount.toFixed(0)],\n        gasLimit: DEPOSIT_GAS_LIMIT,\n        gasPrice: gasPrice,\n        amount: utils_1.isSameHexValue(token, store_1.store.contractAddress) ? amount : '0',\n        nonce: nonce\n      })];\n    });\n  });\n}\nfunction requestWithdrawal(config) {\n  return __awaiter(this, void 0, void 0, function () {\n    var address, amount, gasPrice, token, walletState, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          address = config.address, amount = config.amount, gasPrice = config.gasPrice, token = config.token, walletState = config.walletState;\n          return [4, blockchain_1.blockchain.sendNocustMethod({\n            name: 'requestWithdrawal',\n            address: address,\n            amount: bignumber_js_1.default.max(store_1.store.minChallengeGasCost.multipliedBy(RESPONSE_GAS), new bignumber_js_1.default(gasPrice).multipliedBy(RESPONSE_GAS)),\n            gasLimit: WITHDRAWAL_REQUEST_GAS_LIMIT,\n            gasPrice: gasPrice,\n            params: [token, [walletState.merkleProof.activeStateHash, walletState.merkleProof.passiveHash], walletState.merkleProof.trail, walletState.merkleProof.allotmentChain, walletState.merkleProof.membershipChain, walletState.merkleProof.values, [[walletState.merkleProof.left, walletState.merkleProof.right], [walletState.merkleProof.passiveAmount, walletState.merkleProof.passiveMarker]], amount.toFixed(0)]\n          })];\n        case 1:\n          data = _a.sent();\n          return [2, data.transactionHash];\n      }\n    });\n  });\n}\nfunction fetchBlocksPerEon() {\n  return __awaiter(this, void 0, void 0, function () {\n    var data, e_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n          return [4, blockchain_1.blockchain.callNocustMethod('BLOCKS_PER_EON')];\n        case 1:\n          data = _a.sent();\n          store_1.store.blocksPerEon = parseInt(data);\n          return [3, 3];\n        case 2:\n          e_1 = _a.sent();\n          return [2, Promise.reject(e_1)];\n        case 3:\n          return [2];\n      }\n    });\n  });\n}\nfunction fetchGenesisBlock() {\n  return __awaiter(this, void 0, void 0, function () {\n    var data, e_2;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n          return [4, blockchain_1.blockchain.callNocustMethod('genesis')];\n        case 1:\n          data = _a.sent();\n          store_1.store.genesisBlock = parseInt(data);\n          return [3, 3];\n        case 2:\n          e_2 = _a.sent();\n          return [2, Promise.reject(e_2)];\n        case 3:\n          return [2];\n      }\n    });\n  });\n}\nfunction fetchContractOwnerAddress() {\n  return __awaiter(this, void 0, void 0, function () {\n    var _a, e_3;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          _b.trys.push([0, 2,, 3]);\n          _a = store_1.store;\n          return [4, blockchain_1.blockchain.callNocustMethod('operator')];\n        case 1:\n          _a.contractOwner = _b.sent();\n          return [3, 3];\n        case 2:\n          e_3 = _b.sent();\n          return [2, Promise.reject(e_3)];\n        case 3:\n          return [2];\n      }\n    });\n  });\n}\nfunction fetchSlackPeriod() {\n  return __awaiter(this, void 0, void 0, function () {\n    var _a, e_4;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          _b.trys.push([0, 2,, 3]);\n          _a = store_1.store;\n          return [4, blockchain_1.blockchain.callNocustMethod('BLOCKS_PER_EPOCH')];\n        case 1:\n          _a.slackPeriod = _b.sent();\n          return [3, 3];\n        case 2:\n          e_4 = _b.sent();\n          return [2, Promise.reject(e_4)];\n        case 3:\n          return [2];\n      }\n    });\n  });\n}\nfunction fetchExtendedSlackPeriod() {\n  return __awaiter(this, void 0, void 0, function () {\n    var _a, e_5;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          _b.trys.push([0, 2,, 3]);\n          _a = store_1.store;\n          return [4, blockchain_1.blockchain.callNocustMethod('EXTENDED_BLOCKS_PER_EPOCH')];\n        case 1:\n          _a.extendedSlackPeriod = _b.sent();\n          return [3, 3];\n        case 2:\n          e_5 = _b.sent();\n          return [2, Promise.reject(e_5)];\n        case 3:\n          return [2];\n      }\n    });\n  });\n}\nfunction fetchEonsKept() {\n  return __awaiter(this, void 0, void 0, function () {\n    var _a, e_6;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          _b.trys.push([0, 2,, 3]);\n          _a = store_1.store;\n          return [4, blockchain_1.blockchain.callNocustMethod('EONS_KEPT')];\n        case 1:\n          _a.eonsKept = _b.sent();\n          return [3, 3];\n        case 2:\n          e_6 = _b.sent();\n          return [2, Promise.reject(e_6)];\n        case 3:\n          return [2];\n      }\n    });\n  });\n}\nfunction fetchDepositsKept() {\n  return __awaiter(this, void 0, void 0, function () {\n    var _a, e_7;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          _b.trys.push([0, 2,, 3]);\n          _a = store_1.store;\n          return [4, blockchain_1.blockchain.callNocustMethod('DEPOSITS_KEPT')];\n        case 1:\n          _a.depositsKept = _b.sent();\n          return [3, 3];\n        case 2:\n          e_7 = _b.sent();\n          return [2, Promise.reject(e_7)];\n        case 3:\n          return [2];\n      }\n    });\n  });\n}\nvar checkOutstandingChallenges = function checkOutstandingChallenges() {\n  return blockchain_1.blockchain.callNocustMethod('hasOutstandingChallenges');\n};\nvar checkMissedCheckpointSubmission = function checkMissedCheckpointSubmission() {\n  return blockchain_1.blockchain.callNocustMethod('hasMissedCheckpointSubmission');\n};\nvar checkIsWalletRecovered = function checkIsWalletRecovered(address, token) {\n  return blockchain_1.blockchain.callNocustMethod('getIsWalletRecovered', [token, address]);\n};\nvar getLastSubmissionEon = function getLastSubmissionEon() {\n  return blockchain_1.blockchain.callNocustMethod('lastSubmissionEon');\n};\nvar getDepositsSumAtEon = function getDepositsSumAtEon(address, token, eon) {\n  return blockchain_1.blockchain.callNocustMethod('getDepositsAtEon', [token, address, eon]);\n};\nvar fetchMinChallengeGasCost = function fetchMinChallengeGasCost() {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var value, e_8;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n          return [4, blockchain_1.blockchain.callNocustMethod('MIN_CHALLENGE_GAS_COST')];\n        case 1:\n          value = _a.sent();\n          store_1.store.minChallengeGasCost = new bignumber_js_1.default(value);\n          return [3, 3];\n        case 2:\n          e_8 = _a.sent();\n          return [2, Promise.reject(e_8)];\n        case 3:\n          return [2];\n      }\n    });\n  });\n};\nvar getWalletChallenges = function getWalletChallenges(address, token) {\n  return blockchain_1.blockchain.callNocustMethod('getChallenge', [token, address, address]);\n};\nvar submitInitialMerkleStateChallenge = function submitInitialMerkleStateChallenge(config) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var txSetHash, challengeName, challengeParams;\n    return __generator(this, function (_a) {\n      try {\n        txSetHash = config.walletState.merkleProof.activeState ? config.walletState.merkleProof.activeState.txSetHash : constants_1.EMPTY_HASH;\n        challengeName = 'challengeStateUpdateWithProofOfExclusiveBalanceAllotment';\n        challengeParams = [config.proof.token, [config.walletState.merkleProof.activeStateHash, config.walletState.merkleProof.passiveHash], config.walletState.merkleProof.trail, config.walletState.merkleProof.allotmentChain, config.walletState.merkleProof.membershipChain, config.walletState.merkleProof.values, [[config.walletState.merkleProof.left, config.walletState.merkleProof.right], [config.spent.toFixed(0), config.gained.toFixed(0)], [config.walletState.merkleProof.passiveAmount, config.walletState.merkleProof.passiveMarker]], [ethereumjs_util_1.addHexPrefix(config.operatorSignature.r), ethereumjs_util_1.addHexPrefix(config.operatorSignature.s), txSetHash], ethereumjs_util_1.addHexPrefix(config.operatorSignature.v)];\n        console.log('challengeParams', challengeParams);\n        return [2, blockchain_1.blockchain.sendNocustMethod({\n          name: challengeName,\n          address: config.address,\n          amount: bignumber_js_1.default.max(store_1.store.minChallengeGasCost.multipliedBy(config.gas), config.gasPrice.multipliedBy(config.gas)),\n          gasPrice: config.gasPrice.toFixed(0),\n          gasLimit: config.gas,\n          params: challengeParams\n        })];\n      } catch (e) {\n        return [2, Promise.reject(e)];\n      }\n      return [2];\n    });\n  });\n};\nvar submitInitialEmptyStateChallenge = function submitInitialEmptyStateChallenge(config) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var txSetHash, challengeName, challengeParams;\n    return __generator(this, function (_a) {\n      try {\n        txSetHash = config.walletState.merkleProof.activeState ? config.walletState.merkleProof.activeState.txSetHash : constants_1.EMPTY_HASH;\n        challengeName = 'challengeStateUpdateWithProofOfActiveStateUpdateAgreement';\n        challengeParams = [config.token, txSetHash, config.trailIdentifier, [config.spent.toFixed(0), config.gained.toFixed(0)], ethereumjs_util_1.addHexPrefix(config.operatorSignature.r), ethereumjs_util_1.addHexPrefix(config.operatorSignature.s), ethereumjs_util_1.addHexPrefix(config.operatorSignature.v)];\n        return [2, blockchain_1.blockchain.sendNocustMethod({\n          name: challengeName,\n          address: config.address,\n          amount: bignumber_js_1.default.max(store_1.store.minChallengeGasCost.multipliedBy(config.gas), config.gasPrice.multipliedBy(config.gas)),\n          gasPrice: config.gasPrice.toFixed(0),\n          gasLimit: config.gas,\n          params: challengeParams\n        })];\n      } catch (e) {\n        return [2, Promise.reject(e)];\n      }\n      return [2];\n    });\n  });\n};\nvar submitDeliveryChallenge = function submitDeliveryChallenge(config) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var tokenAddress, address, senderAddress, recipientAddress, nonce, senderTrailIdentifier, transferMembershipTrail, recipientTrailIdentifier, chain, txSetRoot, spent, gained, amount, operatorSignature, gasPrice, gas, balance, challengeName, challengeParams, responseReimbursement, e_9;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 3,, 4]);\n          tokenAddress = config.tokenAddress, address = config.address, senderAddress = config.senderAddress, recipientAddress = config.recipientAddress, nonce = config.nonce, senderTrailIdentifier = config.senderTrailIdentifier, transferMembershipTrail = config.transferMembershipTrail, recipientTrailIdentifier = config.recipientTrailIdentifier, chain = config.chain, txSetRoot = config.txSetRoot, spent = config.spent, gained = config.gained, amount = config.amount, operatorSignature = config.operatorSignature, gasPrice = config.gasPrice, gas = config.gas;\n          return [4, getParentChainBalance_1.default(address)];\n        case 1:\n          balance = _a.sent();\n          challengeName = 'challengeTransferDeliveryWithProofOfActiveStateUpdateAgreement';\n          challengeParams = [ethereumjs_util_1.addHexPrefix(tokenAddress), [ethereumjs_util_1.addHexPrefix(senderAddress), ethereumjs_util_1.addHexPrefix(recipientAddress)], [nonce.toFixed(0), amount.toFixed(0)], [senderTrailIdentifier, transferMembershipTrail, recipientTrailIdentifier], chain.map(function (x) {\n            return ethereumjs_util_1.addHexPrefix(x);\n          }), [spent.toFixed(0), gained.toFixed(0)], [ethereumjs_util_1.addHexPrefix(operatorSignature.r), ethereumjs_util_1.addHexPrefix(operatorSignature.s), ethereumjs_util_1.addHexPrefix(txSetRoot)], ethereumjs_util_1.addHexPrefix(operatorSignature.v)];\n          return [4, blockchain_1.blockchain.estimateGasOfNocustMethod(challengeName, address, balance.toFixed(0), challengeParams)];\n        case 2:\n          responseReimbursement = _a.sent();\n          return [2, blockchain_1.blockchain.sendNocustMethod({\n            name: challengeName,\n            address: config.address,\n            amount: store_1.store.minChallengeGasCost.multipliedBy(responseReimbursement),\n            gasPrice: gasPrice.toFixed(0),\n            gasLimit: gas,\n            params: challengeParams\n          })];\n        case 3:\n          e_9 = _a.sent();\n          return [2, Promise.reject(e_9)];\n        case 4:\n          return [2];\n      }\n    });\n  });\n};\nvar recoverAllFunds = function recoverAllFunds(config) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var recoverParams;\n    return __generator(this, function (_a) {\n      try {\n        recoverParams = [config.token, config.address, [config.activeStateChecksum, config.passiveChecksum], config.trail, config.allotmentChain, config.membershipChain, config.values.map(function (x) {\n          return x.toFixed(0);\n        }), [config.left.toFixed(0), config.right.toFixed(0)], ['0', config.passiveAmount.toFixed(0), config.passiveMarker.toFixed(0)]];\n        return [2, blockchain_1.blockchain.sendNocustMethod({\n          name: 'recoverAllFunds',\n          address: config.address,\n          gasPrice: config.gasPrice.toFixed(0),\n          gasLimit: config.gas,\n          params: recoverParams\n        })];\n      } catch (e) {\n        return [2, Promise.reject(e)];\n      }\n      return [2];\n    });\n  });\n};\nexports.contracts = {\n  checkMissedCheckpointSubmission: checkMissedCheckpointSubmission,\n  checkOutstandingChallenges: checkOutstandingChallenges,\n  deposit: deposit,\n  fetchBlocksPerEon: fetchBlocksPerEon,\n  fetchContractOwnerAddress: fetchContractOwnerAddress,\n  fetchGenesisBlock: fetchGenesisBlock,\n  getDepositsSumAtEon: getDepositsSumAtEon,\n  fetchMinChallengeGasCost: fetchMinChallengeGasCost,\n  requestWithdrawal: requestWithdrawal,\n  getWalletChallenges: getWalletChallenges,\n  fetchSlackPeriod: fetchSlackPeriod,\n  fetchExtendedSlackPeriod: fetchExtendedSlackPeriod,\n  fetchEonsKept: fetchEonsKept,\n  fetchDepositsKept: fetchDepositsKept,\n  submitInitialMerkleStateChallenge: submitInitialMerkleStateChallenge,\n  submitInitialEmptyStateChallenge: submitInitialEmptyStateChallenge,\n  submitDeliveryChallenge: submitDeliveryChallenge,\n  recoverAllFunds: recoverAllFunds,\n  getLastSubmissionEon: getLastSubmissionEon,\n  checkIsWalletRecovered: checkIsWalletRecovered\n};","map":null,"metadata":{},"sourceType":"script"}