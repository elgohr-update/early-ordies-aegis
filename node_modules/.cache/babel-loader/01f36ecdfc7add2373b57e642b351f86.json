{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n          case 7:\n            op = _.ops.pop();\n            _.trys.pop();\n            continue;\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n              _.ops.push(op);\n              break;\n            }\n            if (t[2]) _.ops.pop();\n            _.trys.pop();\n            continue;\n        }\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar parsers_1 = require(\"../operator/parsers\");\nvar syncWallet_1 = require(\"../../wallet/syncWallet\");\nvar _1 = require(\".\");\nvar wallet_1 = require(\"../../wallet\");\nvar validators_1 = require(\"../operator/validators\");\nfunction handleWalletNotification(address, token, type, data) {\n  return __awaiter(this, void 0, void 0, function () {\n    var _a, wallet, e_1, wallet, e_2, payload, wallet, e_3, eventType, payload, wallet, e_4, payload, wallet, e_5;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          console.log('==> incoming ws message:', type);\n          _a = type;\n          switch (_a) {\n            case 'REGISTERED_WALLET':\n              return [3, 1];\n            case 'CONFIRMED_DEPOSIT':\n              return [3, 2];\n            case 'CHECKPOINT_CREATED':\n              return [3, 8];\n            case 'TRANSFER_CONFIRMATION':\n              return [3, 14];\n            case 'SWAP_CONFIRMATION':\n              return [3, 14];\n            case 'MATCHED_SWAP':\n              return [3, 14];\n            case 'SWAP_CANCELLATION':\n              return [3, 20];\n            case 'SWAP_FINALIZATION':\n              return [3, 25];\n          }\n          return [3, 30];\n        case 1:\n          {\n            if (validators_1.payloadValidators.isValidating) validators_1.payloadValidators.validateWalletRegistration(data);\n            _1.websocket.events.emit(_1.websocket.defineEvent(_1.WSEventType.REGISTRATION_CONFIRMATION, address, token), {\n              address: address,\n              token: token,\n              registration: parsers_1.parseRegistration(data)\n            });\n            return [3, 30];\n          }\n          _b.label = 2;\n        case 2:\n          if (validators_1.payloadValidators.isValidating) validators_1.payloadValidators.validateDeposit(data);\n          _b.label = 3;\n        case 3:\n          _b.trys.push([3, 6,, 7]);\n          wallet = wallet_1.getWallet(address, token);\n          if (!wallet) return [3, 5];\n          return [4, syncWallet_1.syncWallet(wallet, syncWallet_1.SyncWalletEvent.SYNC_DEPOSITS, [parsers_1.parseDeposit(data)])];\n        case 4:\n          _b.sent();\n          _b.label = 5;\n        case 5:\n          return [3, 7];\n        case 6:\n          e_1 = _b.sent();\n          console.log('[INTERNAL] Error syncing incoming deposit', e_1);\n          return [3, 7];\n        case 7:\n          _1.websocket.events.emit(_1.websocket.defineEvent(_1.WSEventType.DEPOSIT_CONFIRMATION, address, token), data);\n          return [3, 30];\n        case 8:\n          if (validators_1.payloadValidators.isValidating) validators_1.payloadValidators.validateWalletState(data);\n          _b.label = 9;\n        case 9:\n          _b.trys.push([9, 12,, 13]);\n          wallet = wallet_1.getWallet(address, token);\n          if (!wallet) return [3, 11];\n          return [4, syncWallet_1.syncWallet(wallet, syncWallet_1.SyncWalletEvent.INCREMENT_EON, parsers_1.parseWalletState(data))];\n        case 10:\n          _b.sent();\n          _b.label = 11;\n        case 11:\n          return [3, 13];\n        case 12:\n          e_2 = _b.sent();\n          console.log('[INTERNAL] Error syncing wallet on checkpoint creation', e_2);\n          return [3, 13];\n        case 13:\n          _1.websocket.events.emit(_1.websocket.defineEvent(_1.WSEventType.CHECKPOINT_CREATED, address, token), data);\n          return [3, 30];\n        case 14:\n          if (validators_1.payloadValidators.isValidating) validators_1.payloadValidators.validateTransaction(data);\n          payload = parsers_1.parseTransaction(data);\n          _b.label = 15;\n        case 15:\n          _b.trys.push([15, 18,, 19]);\n          wallet = wallet_1.getWallet(address, token);\n          if (!wallet) return [3, 17];\n          return [4, syncWallet_1.syncWallet(wallet, syncWallet_1.SyncWalletEvent.SYNC_TRANSACTIONS, {\n            payloads: [payload]\n          })];\n        case 16:\n          _b.sent();\n          _b.label = 17;\n        case 17:\n          return [3, 19];\n        case 18:\n          e_3 = _b.sent();\n          console.log('[INTERNAL] Error syncing wallet on transfer update', e_3);\n          return [3, 19];\n        case 19:\n          eventType = type === 'MATCHED_SWAP' ? _1.WSEventType.SWAP_MATCH : _1.WSEventType.TRANSFER_CONFIRMATION;\n          _1.websocket.events.emit(_1.websocket.defineEvent(eventType, payload.recipient.address, payload.recipient.token), payload);\n          return [3, 30];\n        case 20:\n          if (validators_1.payloadValidators.isValidating) validators_1.payloadValidators.validateSwapCancellation(data);\n          payload = parsers_1.parseSwapCancellation(data);\n          wallet = wallet_1.getWallet(address, token);\n          if (!wallet) return [3, 24];\n          _b.label = 21;\n        case 21:\n          _b.trys.push([21, 23,, 24]);\n          return [4, syncWallet_1.syncWallet(wallet, syncWallet_1.SyncWalletEvent.SYNC_SWAP_CANCELLATION, payload)];\n        case 22:\n          _b.sent();\n          return [3, 24];\n        case 23:\n          e_4 = _b.sent();\n          console.log('[INTERNAL] Error syncing wallet on swap cancellation', e_4);\n          return [3, 24];\n        case 24:\n          _1.websocket.events.emit(_1.websocket.defineEvent(_1.WSEventType.SWAP_CANCELLATION, address, token), data);\n          return [3, 30];\n        case 25:\n          if (validators_1.payloadValidators.isValidating) validators_1.payloadValidators.validateSwapFinalization(data);\n          payload = parsers_1.parseSwapFinalization(data);\n          wallet = wallet_1.getWallet(address, token);\n          if (!wallet) return [3, 29];\n          _b.label = 26;\n        case 26:\n          _b.trys.push([26, 28,, 29]);\n          return [4, syncWallet_1.syncWallet(wallet, syncWallet_1.SyncWalletEvent.SYNC_SWAP_FINALIZATION, payload)];\n        case 27:\n          _b.sent();\n          return [3, 29];\n        case 28:\n          e_5 = _b.sent();\n          console.log('[INTERNAL] Error syncing wallet on swap cancellation', e_5);\n          return [3, 29];\n        case 29:\n          _1.websocket.events.emit(_1.websocket.defineEvent(_1.WSEventType.SWAP_FINALIZATION, address, token), data);\n          return [3, 30];\n        case 30:\n          return [2];\n      }\n    });\n  });\n}\nexports.handleWalletNotification = handleWalletNotification;","map":null,"metadata":{},"sourceType":"script"}