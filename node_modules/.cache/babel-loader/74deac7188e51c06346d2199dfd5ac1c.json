{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n          case 7:\n            op = _.ops.pop();\n            _.trys.pop();\n            continue;\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n              _.ops.push(op);\n              break;\n            }\n            if (t[2]) _.ops.pop();\n            _.trys.pop();\n            continue;\n        }\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar json_bigint_1 = __importDefault(require(\"json-bigint\"));\nvar store_1 = require(\"../store\");\nvar parseWallet_1 = require(\"../wallet/parseWallet\");\nvar utils_1 = require(\"../helpers/utils\");\nvar wallet_1 = require(\"../wallet\");\nvar storageEngine;\nfunction init(engine) {\n  storageEngine = engine;\n}\nfunction retrieveWallet(address, token) {\n  return __awaiter(this, void 0, void 0, function () {\n    var keyConfig, walletData, e_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n          keyConfig = {\n            address: address,\n            token: token,\n            contract: store_1.store.contractAddress,\n            network: store_1.store.networkId\n          };\n          return [4, storageEngine.get(defineKey(keyConfig))];\n        case 1:\n          walletData = _a.sent();\n          return [2, walletData ? parseWallet_1.parseWallet(walletData) : null];\n        case 2:\n          e_1 = _a.sent();\n          console.log(e_1);\n          return [2, null];\n        case 3:\n          return [2];\n      }\n    });\n  });\n}\nvar queue = new Set();\nfunction queueWalletStorage(wallet) {\n  queue.add(utils_1.defineWalletKey(wallet.address, wallet.token));\n}\nfunction storeQueuedWallets() {\n  return __awaiter(this, void 0, void 0, function () {\n    var queue_1, queue_1_1, key, _a, token, address, wallet, keyConfig, e_2, e_3_1;\n    var e_3, _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _c.trys.push([0, 7, 8, 9]);\n          queue_1 = __values(queue), queue_1_1 = queue_1.next();\n          _c.label = 1;\n        case 1:\n          if (!!queue_1_1.done) return [3, 6];\n          key = queue_1_1.value;\n          _c.label = 2;\n        case 2:\n          _c.trys.push([2, 4,, 5]);\n          _a = __read(key.split('/'), 2), token = _a[0], address = _a[1];\n          wallet = wallet_1.getWallet(address, token);\n          keyConfig = {\n            address: wallet.address,\n            token: wallet.token,\n            contract: store_1.store.contractAddress,\n            network: store_1.store.networkId\n          };\n          return [4, storageEngine.set(defineKey(keyConfig), json_bigint_1.default.stringify(wallet))];\n        case 3:\n          _c.sent();\n          queue.delete(key);\n          return [3, 5];\n        case 4:\n          e_2 = _c.sent();\n          console.log(\"[INTERNAL] Error storing wallet(\" + key + \") to storage\", e_2);\n          return [3, 5];\n        case 5:\n          queue_1_1 = queue_1.next();\n          return [3, 1];\n        case 6:\n          return [3, 9];\n        case 7:\n          e_3_1 = _c.sent();\n          e_3 = {\n            error: e_3_1\n          };\n          return [3, 9];\n        case 8:\n          try {\n            if (queue_1_1 && !queue_1_1.done && (_b = queue_1.return)) _b.call(queue_1);\n          } finally {\n            if (e_3) throw e_3.error;\n          }\n          return [7];\n        case 9:\n          return [2];\n      }\n    });\n  });\n}\nvar defineKey = function defineKey(config) {\n  return config.contract + '/' + config.network + '/' + config.address + '/' + config.token;\n};\nexports.storage = {\n  init: init,\n  queueWalletStorage: queueWalletStorage,\n  retrieveWallet: retrieveWallet,\n  storeQueuedWallets: storeQueuedWallets\n};","map":null,"metadata":{},"sourceType":"script"}