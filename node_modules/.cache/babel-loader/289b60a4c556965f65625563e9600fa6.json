{"ast":null,"code":"'use strict';\n\nvar HDKey = require('hdkey');\nvar Wallet = require('./index.js');\nfunction EthereumHDKey() {}\n\n/*\n * Horrible wrapping.\n */\nfunction fromHDKey(hdkey) {\n  var ret = new EthereumHDKey();\n  ret._hdkey = hdkey;\n  return ret;\n}\nEthereumHDKey.fromMasterSeed = function (seedBuffer) {\n  return fromHDKey(HDKey.fromMasterSeed(seedBuffer));\n};\nEthereumHDKey.fromExtendedKey = function (base58key) {\n  return fromHDKey(HDKey.fromExtendedKey(base58key));\n};\nEthereumHDKey.prototype.privateExtendedKey = function () {\n  if (!this._hdkey.privateExtendedKey) {\n    throw new Error('This is a public key only wallet');\n  }\n  return this._hdkey.privateExtendedKey;\n};\nEthereumHDKey.prototype.publicExtendedKey = function () {\n  return this._hdkey.publicExtendedKey;\n};\nEthereumHDKey.prototype.derivePath = function (path) {\n  return fromHDKey(this._hdkey.derive(path));\n};\nEthereumHDKey.prototype.deriveChild = function (index) {\n  return fromHDKey(this._hdkey.deriveChild(index));\n};\nEthereumHDKey.prototype.getWallet = function () {\n  if (this._hdkey._privateKey) {\n    return Wallet.fromPrivateKey(this._hdkey._privateKey);\n  } else {\n    return Wallet.fromPublicKey(this._hdkey._publicKey, true);\n  }\n};\nmodule.exports = EthereumHDKey;","map":null,"metadata":{},"sourceType":"script"}