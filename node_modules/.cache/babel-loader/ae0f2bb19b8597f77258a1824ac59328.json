{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n          case 7:\n            op = _.ops.pop();\n            _.trys.pop();\n            continue;\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n              _.ops.push(op);\n              break;\n            }\n            if (t[2]) _.ops.pop();\n            _.trys.pop();\n            continue;\n        }\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar web3_1 = __importDefault(require(\"web3\"));\nvar bignumber_js_1 = require(\"bignumber.js\");\nvar constants_1 = require(\"../constants\");\nvar utils_1 = require(\"../helpers/utils\");\nvar operator_1 = require(\"../services/operator\");\nfunction hashTransfer(config) {\n  var soliditySha3 = web3_1.default.utils.soliditySha3;\n  var passiveMarker = config.passiveMarker || constants_1.BN_2_256_MINUS_1;\n  console.log('passiveMarker', passiveMarker);\n  var transferTag = new bignumber_js_1.BigNumber(utils_1.remove0x(soliditySha3({\n    t: 'uint256',\n    v: passiveMarker.toFixed(0)\n  }, {\n    t: 'uint256',\n    v: config.nonce.toFixed(0)\n  }).toString()), 16);\n  return soliditySha3({\n    t: 'bytes32',\n    v: soliditySha3({\n      t: 'address',\n      v: config.isOutgoing ? config.recipientAddress : config.senderAddress\n    })\n  }, {\n    t: 'uint256',\n    v: config.amount.toFixed(0)\n  }, {\n    t: 'uint64',\n    v: config.recipientTrailIdentifier.toString()\n  }, {\n    t: 'uint256',\n    v: transferTag.toFixed(0)\n  }).toString();\n}\nexports.hashTransfer = hashTransfer;\nfunction hashSwap(config) {\n  var soliditySha3 = web3_1.default.utils.soliditySha3;\n  return soliditySha3({\n    type: 'bytes32',\n    value: soliditySha3({\n      type: 'address',\n      value: config.debitToken\n    })\n  }, {\n    type: 'bytes32',\n    value: soliditySha3({\n      type: 'address',\n      value: config.creditToken\n    })\n  }, {\n    type: 'uint64',\n    value: config.trailIdentifier.toString()\n  }, {\n    type: 'uint256',\n    value: config.amount.toFixed(0)\n  }, {\n    type: 'uint256',\n    value: config.amountSwapped.toFixed(0)\n  }, {\n    type: 'uint256',\n    value: config.startingBalance.toFixed(0)\n  }, {\n    type: 'uint256',\n    value: config.nonce.toFixed(0)\n  }).toString();\n}\nexports.hashSwap = hashSwap;\nfunction hashSwapFreezing(config) {\n  var soliditySha3 = web3_1.default.utils.soliditySha3;\n  return soliditySha3({\n    type: 'bytes32',\n    value: soliditySha3({\n      type: 'address',\n      value: config.debitToken\n    })\n  }, {\n    type: 'bytes32',\n    value: soliditySha3({\n      type: 'address',\n      value: config.creditToken\n    })\n  }, {\n    type: 'uint256',\n    value: config.nonce.toFixed(0)\n  }).toString();\n}\nexports.hashSwapFreezing = hashSwapFreezing;\nfunction getTransactionActiveState(transaction, isOutgoing) {\n  if (transaction.swap) {\n    if (isOutgoing) {\n      return transaction.senderCancellationActiveState ? transaction.senderCancellationActiveState : transaction.senderActiveState;\n    }\n    if (transaction.recipientFinalizationActiveState) {\n      return transaction.recipientFinalizationActiveState;\n    }\n    if (transaction.recipientCancellationActiveState) {\n      return transaction.recipientCancellationActiveState;\n    }\n    if (transaction.complete) {\n      return transaction.recipientFulfillmentActiveState;\n    }\n    return transaction.recipientActiveState;\n  }\n  if (isOutgoing) {\n    return transaction.senderActiveState;\n  }\n  return transaction.recipientActiveState;\n}\nexports.getTransactionActiveState = getTransactionActiveState;\nfunction transactionToMerkleTree(transaction, wallet, lastTransaction) {\n  var passiveMarkerValue;\n  if (lastTransaction) {\n    passiveMarkerValue = transaction.id === lastTransaction.id ? constants_1.BN_2_256_MINUS_1 : transaction.passiveMarker;\n  } else {\n    passiveMarkerValue = transaction.passiveMarker;\n  }\n  var isOutgoing = transaction.sender.address === wallet.address && transaction.sender.token === wallet.token;\n  if (transaction.swap) {\n    return {\n      height: 0,\n      hash: hashSwap({\n        amount: transaction.amount,\n        amountSwapped: transaction.amountSwapped,\n        nonce: transaction.nonce,\n        debitToken: transaction.sender.token,\n        creditToken: transaction.recipient.token,\n        startingBalance: !isOutgoing && (transaction.complete || transaction.cancelled) ? constants_1.BN_2_256_MINUS_1 : wallet.currentEon.initialBalanceAllotment,\n        trailIdentifier: transaction.recipient.trailIdentifier\n      })\n    };\n  }\n  return {\n    height: 0,\n    hash: hashTransfer({\n      amount: transaction.amount,\n      nonce: transaction.nonce,\n      recipientAddress: transaction.recipient.address,\n      senderAddress: transaction.sender.address,\n      recipientTrailIdentifier: transaction.recipient.trailIdentifier,\n      passiveMarker: passiveMarkerValue,\n      isOutgoing: isOutgoing\n    })\n  };\n}\nexports.transactionToMerkleTree = transactionToMerkleTree;\nfunction getSwapEonCount(swap) {\n  return __awaiter(this, void 0, void 0, function () {\n    var swaps, eonCount, e_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n          return [4, operator_1.operator.getTransfers({\n            txId: swap.txId\n          })];\n        case 1:\n          swaps = _a.sent();\n          eonCount = swaps.reduce(function (count, s) {\n            if (s.eon <= swap.eon) {\n              return count + 1;\n            }\n            return count;\n          }, 0);\n          return [2, eonCount];\n        case 2:\n          e_1 = _a.sent();\n          return [2, Promise.reject(e_1)];\n        case 3:\n          return [2];\n      }\n    });\n  });\n}\nexports.getSwapEonCount = getSwapEonCount;","map":null,"metadata":{},"sourceType":"script"}