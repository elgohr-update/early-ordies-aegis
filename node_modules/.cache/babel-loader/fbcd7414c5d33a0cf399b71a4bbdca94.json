{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n          case 7:\n            op = _.ops.pop();\n            _.trys.pop();\n            continue;\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n              _.ops.push(op);\n              break;\n            }\n            if (t[2]) _.ops.pop();\n            _.trys.pop();\n            continue;\n        }\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) {\n    ar = ar.concat(__read(arguments[i]));\n  }\n  return ar;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar transaction_1 = require(\"../wallet/transaction\");\nvar _1 = require(\".\");\nvar store_1 = require(\"../store\");\nvar errors_1 = require(\"../helpers/errors\");\nvar utils_1 = require(\"../helpers/utils\");\nvar operator_1 = require(\"../services/operator\");\nvar blockchain_1 = require(\"../services/blockchain\");\nvar activeState_1 = require(\"../wallet/activeState\");\nvar balanceMarker_1 = require(\"../wallet/balanceMarker\");\nvar checks_1 = require(\"../wallet/checks\");\nvar syncWallet_1 = require(\"../wallet/syncWallet\");\nvar merkleTree_1 = require(\"../wallet/merkleTree\");\nvar wallet_1 = require(\"../wallet\");\nfunction transfer(config) {\n  return __awaiter(this, void 0, void 0, function () {\n    var from, to, token, amount, nonce, wallet, currentEon, registrationData, proposedTransfer, proposedTransferNode, transactionSetNodes, transactionSetHash, balanceMarker, activeState, _a, activeStateSignature, balanceMarkerSignature, transferPayload_1, recipientWallet, e_1;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          from = config.from, to = config.to, token = config.token, amount = config.amount, nonce = config.nonce;\n          if (!token) token = store_1.store.contractAddress;\n          if (utils_1.isSameHexValue(from, to)) return [2, Promise.reject(new errors_1.NCError(errors_1.NCErrorCode.TRANSFER_TO_SELF))];\n          return [4, _1.nocust.getWallet(from, token)];\n        case 1:\n          wallet = _b.sent();\n          currentEon = wallet.currentEon;\n          if (currentEon.balance.isLessThan(amount)) {\n            return [2, Promise.reject(new errors_1.NCError(errors_1.NCErrorCode.INSUFFICIENT_COMMIT_CHAIN_BALANCE))];\n          }\n          return [4, operator_1.operator.getWalletRegistration(to, token)];\n        case 2:\n          registrationData = _b.sent();\n          if (!registrationData) return [2, Promise.reject(new errors_1.NCError(errors_1.NCErrorCode.WALLET_UNREGISTERED))];\n          checks_1.checkRegistration(to, token, registrationData);\n          if (!nonce) nonce = utils_1.generateRandomNonce();\n          proposedTransfer = {\n            senderAddress: from,\n            recipientAddress: to,\n            recipientTrailIdentifier: registrationData.trailIdentifier,\n            amount: amount,\n            nonce: nonce,\n            isOutgoing: true\n          };\n          proposedTransferNode = {\n            height: 0,\n            hash: transaction_1.hashTransfer(proposedTransfer)\n          };\n          transactionSetNodes = __spread(currentEon.activeTransactions.map(function (t) {\n            return transaction_1.transactionToMerkleTree(t, wallet);\n          }), [proposedTransferNode]);\n          transactionSetHash = merkleTree_1.constructMerkleTree(transactionSetNodes).hash;\n          balanceMarker = {\n            address: wallet.address,\n            token: token,\n            eon: currentEon.eon,\n            balance: currentEon.balance.minus(amount).toFixed(0)\n          };\n          activeState = __assign(__assign({}, currentEon.activeState), {\n            spent: currentEon.activeState.spent.plus(amount),\n            transactionSetHash: transactionSetHash\n          });\n          return [4, Promise.all([blockchain_1.blockchain.sign(wallet.address, activeState_1.hashActiveState(activeState)), blockchain_1.blockchain.sign(wallet.address, balanceMarker_1.hashBalanceMarker(balanceMarker))])];\n        case 3:\n          _a = __read.apply(void 0, [_b.sent(), 2]), activeStateSignature = _a[0], balanceMarkerSignature = _a[1];\n          _b.label = 4;\n        case 4:\n          _b.trys.push([4, 9,, 14]);\n          return [4, operator_1.operator.sendTransfer({\n            activeStateSignature: activeStateSignature,\n            balanceMarkerSignature: balanceMarkerSignature,\n            balanceMarker: balanceMarker,\n            amount: proposedTransfer.amount,\n            senderAddress: from,\n            recipientAddress: to,\n            eon: wallet.currentEon.eon,\n            nonce: nonce,\n            tokenAddress: token\n          })];\n        case 5:\n          transferPayload_1 = _b.sent();\n          return [4, syncWallet_1.syncWallet(wallet, syncWallet_1.SyncWalletEvent.SYNC_TRANSACTIONS, {\n            payloads: [transferPayload_1]\n          })];\n        case 6:\n          _b.sent();\n          recipientWallet = wallet_1.getWallet(to, token);\n          if (!recipientWallet) return [3, 8];\n          return [4, syncWallet_1.syncWallet(recipientWallet, syncWallet_1.SyncWalletEvent.SYNC_TRANSACTIONS, {\n            payloads: [transferPayload_1]\n          })];\n        case 7:\n          _b.sent();\n          _b.label = 8;\n        case 8:\n          return [2, wallet.currentEon.transactions.find(function (t) {\n            return t.id === transferPayload_1.id;\n          })];\n        case 9:\n          e_1 = _b.sent();\n          if (!(e_1.message === errors_1.NCServerErrorCode.EON_NUMBER_OUT_OF_SYNC)) return [3, 12];\n          return [4, utils_1.sleep(2000)];\n        case 10:\n          _b.sent();\n          return [4, syncWallet_1.syncWallet(wallet, syncWallet_1.SyncWalletEvent.FULL_SYNC)];\n        case 11:\n          _b.sent();\n          return [2, transfer(config)];\n        case 12:\n          return [2, Promise.reject(e_1)];\n        case 13:\n          return [3, 14];\n        case 14:\n          return [2];\n      }\n    });\n  });\n}\nexports.default = transfer;","map":null,"metadata":{},"sourceType":"script"}