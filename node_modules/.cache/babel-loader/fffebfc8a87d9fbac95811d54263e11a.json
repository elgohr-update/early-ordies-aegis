{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar web3_1 = __importDefault(require(\"web3\"));\nvar constants_1 = require(\"../constants\");\nvar constructMerkleLeaf = function constructMerkleLeaf(leaves) {\n  if (leaves.length === 0) {\n    return {\n      height: 0,\n      hash: constants_1.EMPTY_HASH\n    };\n  } else if (leaves.length === 1) {\n    return {\n      height: 0,\n      hash: leaves[0].hash\n    };\n  }\n  var left = leaves.slice(0, leaves.length / 2);\n  var right = leaves.slice(leaves.length / 2, leaves.length);\n  var leftChild = exports.constructMerkleTree(left);\n  var rightChild = exports.constructMerkleTree(right);\n  var height = leftChild.height + 1;\n  var hash = web3_1.default.utils.soliditySha3({\n    t: 'uint32',\n    v: leftChild.height\n  }, {\n    t: 'bytes32',\n    v: leftChild.hash\n  }, {\n    t: 'bytes32',\n    v: rightChild.hash\n  });\n  var result = {\n    leftChild: leftChild,\n    rightChild: rightChild,\n    height: height,\n    hash: hash\n  };\n  leftChild.parent = result;\n  rightChild.parent = result;\n  return result;\n};\nexports.constructMerkleTree = function (leaves) {\n  if (leaves.length > 2) {\n    var paddedLength = 2;\n    while (paddedLength < leaves.length) {\n      paddedLength *= 2;\n    }\n    while (leaves.length < paddedLength) {\n      leaves.push({\n        height: 0,\n        hash: constants_1.EMPTY_HASH\n      });\n    }\n  }\n  return constructMerkleLeaf(leaves);\n};\nexports.EMPTY_MERKLE_TREE = exports.constructMerkleTree([]);","map":null,"metadata":{},"sourceType":"script"}