{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function sent() {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n          case 7:\n            op = _.ops.pop();\n            _.trys.pop();\n            continue;\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n              _.ops.push(op);\n              break;\n            }\n            if (t[2]) _.ops.pop();\n            _.trys.pop();\n            continue;\n        }\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar request_1 = require(\"./request\");\nvar store_1 = require(\"../../store\");\nvar parsers_1 = require(\"./parsers\");\nvar utils_1 = require(\"../../helpers/utils\");\nvar errors_1 = require(\"../../helpers/errors\");\nvar signature_1 = require(\"../../wallet/signature\");\nvar validators_1 = require(\"./validators\");\nexports.operator = {\n  getSLAInfo: getSLAInfo,\n  getSLAStatus: getSLAStatus,\n  getStatus: getStatus,\n  getTokensList: getTokensList,\n  getTransfer: getTransfer,\n  getTransfers: getTransfers,\n  fetchWalletState: fetchWalletState,\n  getWalletRegistration: getWalletRegistration,\n  registerWallet: registerWallet,\n  sendTransfer: sendTransfer,\n  postSLA: postSLA,\n  getToSDigests: getToSDigests,\n  postToSSignature: postToSSignature,\n  registerBulkWallets: registerBulkWallets,\n  sendSwapOrder: sendSwapOrder,\n  sendSwapFreezing: sendSwapFreezing,\n  sendSwapCancellation: sendSwapCancellation,\n  sendSwapFinalization: sendSwapFinalization,\n  getOrderbook: getOrderbook\n};\nfunction getStatus() {\n  return __awaiter(this, void 0, void 0, function () {\n    var data, e_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n          return [4, request_1.request('audit', 'get')];\n        case 1:\n          data = _a.sent();\n          return [2, parsers_1.parseOperatorStatus(data)];\n        case 2:\n          e_1 = _a.sent();\n          return [2, Promise.reject(e_1)];\n        case 3:\n          return [2];\n      }\n    });\n  });\n}\nfunction getSLAInfo() {\n  return __awaiter(this, void 0, void 0, function () {\n    var data, e_2;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n          if (store_1.store.slaInfo) return [2, store_1.store.slaInfo];\n          return [4, request_1.request('sla', 'get')];\n        case 1:\n          data = _a.sent();\n          if (validators_1.payloadValidators.isValidating) validators_1.payloadValidators.validateSLAInfo(data);\n          store_1.store.slaInfo = parsers_1.parseSLAInfo(data);\n          return [2, store_1.store.slaInfo];\n        case 2:\n          e_2 = _a.sent();\n          return [2, Promise.reject(e_2)];\n        case 3:\n          return [2];\n      }\n    });\n  });\n}\nfunction getTokensList() {\n  return __awaiter(this, void 0, void 0, function () {\n    var data, e_3;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n          return [4, request_1.request('audit/tokens/', 'get')];\n        case 1:\n          data = _a.sent();\n          if (validators_1.payloadValidators.isValidating) validators_1.payloadValidators.validateTokensList(data);\n          return [2, parsers_1.parseTokenInfo(data)];\n        case 2:\n          e_3 = _a.sent();\n          return [2, Promise.reject(e_3)];\n        case 3:\n          return [2];\n      }\n    });\n  });\n}\nfunction fetchWalletState(config) {\n  return __awaiter(this, void 0, void 0, function () {\n    var token, address, eon, data, e_4;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n          token = config.token, address = config.address, eon = config.eon;\n          return [4, request_1.request('audit/' + eon + '/' + token + '/' + address + '/', 'get')];\n        case 1:\n          data = _a.sent();\n          if (validators_1.payloadValidators.isValidating) validators_1.payloadValidators.validateWalletState(data);\n          return [2, parsers_1.parseWalletState(data)];\n        case 2:\n          e_4 = _a.sent();\n          return [2, Promise.reject(e_4)];\n        case 3:\n          return [2];\n      }\n    });\n  });\n}\nfunction getWalletRegistration(address, token) {\n  return __awaiter(this, void 0, void 0, function () {\n    var data, e_5;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n          return [4, request_1.request('audit/' + token + '/' + address + '/whois', 'get')];\n        case 1:\n          data = _a.sent();\n          if (validators_1.payloadValidators.isValidating) validators_1.payloadValidators.validateWalletRegistration(data);\n          return [2, parsers_1.parseRegistration(data)];\n        case 2:\n          e_5 = _a.sent();\n          return [2, Promise.reject(e_5)];\n        case 3:\n          return [2];\n      }\n    });\n  });\n}\nfunction getTransfer(id) {\n  return __awaiter(this, void 0, void 0, function () {\n    var data, e_6;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n          return [4, request_1.request('audit/transactions/' + id, 'get')];\n        case 1:\n          data = _a.sent();\n          if (validators_1.payloadValidators.isValidating) validators_1.payloadValidators.validateTransaction(data);\n          return [2, parsers_1.parseTransaction(data)];\n        case 2:\n          e_6 = _a.sent();\n          return [2, Promise.reject(e_6)];\n        case 3:\n          return [2];\n      }\n    });\n  });\n}\nfunction getTransfers(params) {\n  return __awaiter(this, void 0, void 0, function () {\n    var paramsTransformed, data, e_7;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n          paramsTransformed = __assign(__assign({}, params), {\n            tx_id: params.txId,\n            eon_number: params.eon\n          });\n          return [4, request_1.request('audit/transactions', 'get', undefined, paramsTransformed)];\n        case 1:\n          data = _a.sent();\n          return [2, data.results.map(function (t) {\n            return parsers_1.parseTransaction(t);\n          })];\n        case 2:\n          e_7 = _a.sent();\n          return [2, Promise.reject(e_7)];\n        case 3:\n          return [2];\n      }\n    });\n  });\n}\nfunction getSLAStatus(address) {\n  return __awaiter(this, void 0, void 0, function () {\n    var data, e_8;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n          return [4, request_1.request('sla/' + address, 'get')];\n        case 1:\n          data = _a.sent();\n          if (validators_1.payloadValidators.isValidating) validators_1.payloadValidators.validateSLA(data);\n          return [2, data.expiry];\n        case 2:\n          e_8 = _a.sent();\n          return [2, Promise.reject(e_8)];\n        case 3:\n          return [2];\n      }\n    });\n  });\n}\nfunction registerWallet(wallet, authSignature, tosSignature) {\n  try {\n    return request_1.request('admission/', 'post', {\n      authorization: {\n        value: signature_1.signatureToRSV(authSignature)\n      },\n      address: utils_1.remove0x(wallet.address),\n      token: utils_1.remove0x(wallet.token),\n      tos_signature: {\n        value: signature_1.signatureToRSV(tosSignature)\n      }\n    });\n  } catch (e) {\n    if (e.message === errors_1.NCServerErrorCode.NON_UNIQUE) {\n      return Promise.reject(new errors_1.NCError(errors_1.NCErrorCode.WALLET_ALREADY_REGISTERED, undefined, e));\n    } else return Promise.reject(e);\n  }\n}\nfunction registerBulkWallets(walletsConfig) {\n  try {\n    return request_1.request('admission/bulk/', 'post', {\n      admissions: walletsConfig.map(function (config) {\n        return {\n          authorization: {\n            value: signature_1.signatureToRSV(config.authSignature)\n          },\n          address: utils_1.remove0x(config.wallet.address),\n          token: utils_1.remove0x(config.wallet.token),\n          tos_signature: {\n            value: signature_1.signatureToRSV(config.tosSignature)\n          }\n        };\n      })\n    });\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\nfunction sendTransfer(config) {\n  return __awaiter(this, void 0, void 0, function () {\n    var data, e_9;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n          return [4, request_1.request('transfer/', 'post', {\n            wallet: {\n              address: utils_1.remove0x(config.senderAddress),\n              token: utils_1.remove0x(config.tokenAddress)\n            },\n            amount: config.amount,\n            nonce: config.nonce,\n            eon_number: config.eon,\n            recipient: {\n              address: utils_1.remove0x(config.recipientAddress),\n              token: utils_1.remove0x(config.tokenAddress)\n            },\n            debit_balance: config.balanceMarker.balance,\n            debit_signature: {\n              value: signature_1.signatureToRSV(config.activeStateSignature)\n            },\n            debit_balance_signature: {\n              value: signature_1.signatureToRSV(config.balanceMarkerSignature)\n            }\n          })];\n        case 1:\n          data = _a.sent();\n          if (validators_1.payloadValidators.isValidating) validators_1.payloadValidators.validateTransaction(data);\n          return [2, parsers_1.parseTransaction(data)];\n        case 2:\n          e_9 = _a.sent();\n          return [2, Promise.reject(e_9)];\n        case 3:\n          return [2];\n      }\n    });\n  });\n}\nfunction postSLA(address, transferId) {\n  return __awaiter(this, void 0, void 0, function () {\n    var e_10;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n          return [4, request_1.request('sla/' + address, 'post', {\n            transfer_id: transferId\n          })];\n        case 1:\n          _a.sent();\n          return [3, 3];\n        case 2:\n          e_10 = _a.sent();\n          return [2, Promise.reject(e_10)];\n        case 3:\n          return [2];\n      }\n    });\n  });\n}\nfunction getToSDigests() {\n  return __awaiter(this, void 0, void 0, function () {\n    var data, e_11;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n          return [4, request_1.request('tos/latest', 'get')];\n        case 1:\n          data = _a.sent();\n          return [2, parsers_1.parseToSConfig(data)];\n        case 2:\n          e_11 = _a.sent();\n          return [2, Promise.reject(e_11)];\n        case 3:\n          return [2];\n      }\n    });\n  });\n}\nfunction postToSSignature(address, tosSignature) {\n  return __awaiter(this, void 0, void 0, function () {\n    var e_12;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n          return [4, request_1.request('tos/', 'post', {\n            address: address,\n            tos_signature: signature_1.signatureToRSV(tosSignature)\n          })];\n        case 1:\n          _a.sent();\n          return [3, 3];\n        case 2:\n          e_12 = _a.sent();\n          return [2, Promise.reject(e_12)];\n        case 3:\n          return [2];\n      }\n    });\n  });\n}\nfunction sendSwapOrder(config) {\n  return __awaiter(this, void 0, void 0, function () {\n    var data, e_13;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n          return [4, request_1.request('swap/', 'post', {\n            debit_signature: config.debitActiveStateSignatures.map(function (signature) {\n              return {\n                value: signature_1.signatureToRSV(signature)\n              };\n            }),\n            credit_signature: config.creditActiveStateSignatures.map(function (signature) {\n              return {\n                value: signature_1.signatureToRSV(signature)\n              };\n            }),\n            credit_balance_signature: config.creditBalanceSignatures.map(function (signature) {\n              return {\n                value: signature_1.signatureToRSV(signature)\n              };\n            }),\n            debit_balance_signature: config.debitBalanceSignatures.map(function (signature) {\n              return {\n                value: signature_1.signatureToRSV(signature)\n              };\n            }),\n            credit_fulfillment_signature: config.fulfillmentActiveStateSignatures.map(function (signature) {\n              return {\n                value: signature_1.signatureToRSV(signature)\n              };\n            }),\n            eon_number: config.eon,\n            amount: config.amount,\n            amount_swapped: config.amountSwapped,\n            nonce: config.nonce,\n            wallet: {\n              address: utils_1.remove0x(config.debitWallet.address),\n              token: utils_1.remove0x(config.debitWallet.token)\n            },\n            recipient: {\n              address: utils_1.remove0x(config.creditWallet.address),\n              token: utils_1.remove0x(config.creditWallet.token)\n            }\n          })];\n        case 1:\n          data = _a.sent();\n          if (validators_1.payloadValidators.isValidating) validators_1.payloadValidators.validateTransaction(data);\n          return [2, parsers_1.parseTransaction(data)];\n        case 2:\n          e_13 = _a.sent();\n          return [2, Promise.reject(e_13)];\n        case 3:\n          return [2];\n      }\n    });\n  });\n}\nfunction sendSwapFreezing(swapId, freezingSignature) {\n  return __awaiter(this, void 0, void 0, function () {\n    var data, e_14;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n          return [4, request_1.request(\"swap/\" + swapId + \"/freeze\", 'put', {\n            freezing_signature: {\n              value: signature_1.signatureToRSV(freezingSignature)\n            }\n          })];\n        case 1:\n          data = _a.sent();\n          if (validators_1.payloadValidators.isValidating) validators_1.payloadValidators.validateSwapFreeze(data);\n          return [2, parsers_1.parseSwapFreeze(data)];\n        case 2:\n          e_14 = _a.sent();\n          return [2, Promise.reject(e_14)];\n        case 3:\n          return [2];\n      }\n    });\n  });\n}\nfunction sendSwapCancellation(swapId, creditCancellationSignatures, debitCancellationSignatures) {\n  return __awaiter(this, void 0, void 0, function () {\n    var data, e_15;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n          return [4, request_1.request(\"swap/\" + swapId + \"/cancel\", 'put', {\n            sender_cancellation_signature: debitCancellationSignatures.map(function (signature) {\n              return {\n                value: signature_1.signatureToRSV(signature)\n              };\n            }),\n            recipient_cancellation_signature: creditCancellationSignatures.map(function (signature) {\n              return {\n                value: signature_1.signatureToRSV(signature)\n              };\n            })\n          })];\n        case 1:\n          data = _a.sent();\n          if (validators_1.payloadValidators.isValidating) validators_1.payloadValidators.validateSwapCancellation(data);\n          return [2, parsers_1.parseSwapCancellation(data)];\n        case 2:\n          e_15 = _a.sent();\n          return [2, Promise.reject(e_15)];\n        case 3:\n          return [2];\n      }\n    });\n  });\n}\nfunction sendSwapFinalization(swapId, finalizationSignatures) {\n  return __awaiter(this, void 0, void 0, function () {\n    var data, e_16;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n          return [4, request_1.request(\"swap/\" + swapId + \"/finalize\", 'put', {\n            finalization_signature: finalizationSignatures.map(function (signature) {\n              return {\n                value: signature_1.signatureToRSV(signature)\n              };\n            })\n          })];\n        case 1:\n          data = _a.sent();\n          if (validators_1.payloadValidators.isValidating) validators_1.payloadValidators.validateSwapFinalization(data);\n          return [2, parsers_1.parseSwapFinalization(data)];\n        case 2:\n          e_16 = _a.sent();\n          return [2, Promise.reject(e_16)];\n        case 3:\n          return [2];\n      }\n    });\n  });\n}\nfunction getOrderbook(baseTokenAddress, quoteTokenAddress) {\n  return __awaiter(this, void 0, void 0, function () {\n    var data, e_17;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n          return [4, request_1.request(\"audit/\" + baseTokenAddress + \"/\" + quoteTokenAddress + \"/orderbook\", 'get')];\n        case 1:\n          data = _a.sent();\n          if (validators_1.payloadValidators.isValidating) validators_1.payloadValidators.validateOrderBook(data);\n          return [2, parsers_1.parseOrderBook(data)];\n        case 2:\n          e_17 = _a.sent();\n          return [2, Promise.reject(e_17)];\n        case 3:\n          return [2];\n      }\n    });\n  });\n}","map":null,"metadata":{},"sourceType":"script"}