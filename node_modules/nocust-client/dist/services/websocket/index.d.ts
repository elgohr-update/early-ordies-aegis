import { EventEmitter } from '../../helpers/eventEmitter';
export declare enum WSEventType {
    REGISTRATION_CONFIRMATION = "REGISTRATION_CONFIRMATION",
    DEPOSIT_CONFIRMATION = "DEPOSIT_CONFIRMATION",
    CHECKPOINT_CREATED = "CHECKPOINT_CREATED",
    TRANSFER_CONFIRMATION = "TRANSFER_CONFIRMATION",
    SWAP_MATCH = "SWAP_MATCH",
    SWAP_CANCELLATION = "SWAP_CANCELLATION",
    SWAP_FINALIZATION = "SWAP_FINALIZATION"
}
declare function init(url: string): void;
export declare type WSCommand = 'subscribe' | 'unsubscribe' | 'get' | 'ping' | 'ack';
declare function send(command: WSCommand, args?: Object): void;
declare function shutdown(): void;
declare type WaitForEventConfig = {
    event: WSEventType;
    address: string;
    token: string;
    timeout?: number;
};
declare function waitForEvent(config: WaitForEventConfig): Promise<any>;
export declare const websocket: {
    events: EventEmitter<string>;
    init: typeof init;
    shutdown: typeof shutdown;
    send: typeof send;
    waitForEvent: typeof waitForEvent;
    defineEvent: (event: WSEventType, address: string, token: string) => string;
};
export {};
