"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var ethereumjs_util_1 = require("ethereumjs-util");
var bip39 = __importStar(require("bip39"));
var hdkey_1 = __importDefault(require("ethereumjs-wallet/hdkey"));
var ethereumjs_wallet_1 = __importDefault(require("ethereumjs-wallet"));
var blockchain_1 = require("../services/blockchain");
var constants_1 = require("../constants");
var signature_1 = require("../wallet/signature");
var operator_1 = require("../services/operator");
var nocust_1 = require("../nocust");
var wallet_1 = require("../wallet");
var store_1 = require("../store");
function init(address, baseTokenAddress, quoteTokenAddress) {
    return __awaiter(this, void 0, void 0, function () {
        var tokens, seed, wallets, nonRegisteredWallets_1, registrationChecks_1, err_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (store_1.store.swapWallets.has(address)) {
                        return [2];
                    }
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 6, , 7]);
                    tokens = [baseTokenAddress, quoteTokenAddress];
                    return [4, generateSeed(address)];
                case 2:
                    seed = _a.sent();
                    return [4, createSwapWallets(seed, tokens, address)];
                case 3:
                    wallets = _a.sent();
                    nonRegisteredWallets_1 = [];
                    registrationChecks_1 = [];
                    wallets.forEach(function (wallet) {
                        registrationChecks_1.push(operator_1.operator.getWalletRegistration(wallet.address, wallet.token).catch(function () {
                            nonRegisteredWallets_1.push({ address: wallet.address, token: wallet.token });
                        }));
                    });
                    return [4, Promise.all(registrationChecks_1)];
                case 4:
                    _a.sent();
                    return [4, nocust_1.nocust.registerBulkWallets(wallets)];
                case 5:
                    _a.sent();
                    store_1.store.swapWallets.set(address, __spread(new Set(wallets.map(function (wallet) { return wallet.address; }))));
                    return [3, 7];
                case 6:
                    err_1 = _a.sent();
                    return [2, Promise.reject(err_1)];
                case 7: return [2];
            }
        });
    });
}
exports.default = init;
function createSwapWallets(seed, tokens, parentAddress) {
    return __awaiter(this, void 0, void 0, function () {
        var wallets_1, _loop_1, i, e_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 5, , 6]);
                    wallets_1 = [];
                    _loop_1 = function (i) {
                        var secretKey, HDWallet, hdWallet, privateKey, privateKeyBuffer, wallet, publicKey, address, checkSumAddress;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0: return [4, bip39.mnemonicToSeed(seed)];
                                case 1:
                                    secretKey = _a.sent();
                                    HDWallet = hdkey_1.default.fromMasterSeed(secretKey);
                                    hdWallet = HDWallet.derivePath("m/44'/60'/0'/0/" + i).getWallet();
                                    privateKey = hdWallet.getPrivateKeyString();
                                    privateKeyBuffer = ethereumjs_util_1.toBuffer(privateKey);
                                    wallet = ethereumjs_wallet_1.default.fromPrivateKey(privateKeyBuffer);
                                    publicKey = wallet.getPublicKeyString();
                                    address = ethereumjs_util_1.publicToAddress(publicKey).toString('hex');
                                    checkSumAddress = ethereumjs_util_1.toChecksumAddress(address);
                                    tokens.forEach(function (token) {
                                        wallets_1.push(wallet_1.createWallet(checkSumAddress, token, parentAddress));
                                        nocust_1.nocust.addPrivateKey(privateKey);
                                    });
                                    return [2];
                            }
                        });
                    };
                    i = 0;
                    _a.label = 1;
                case 1:
                    if (!(i < constants_1.SWAP_COUNT)) return [3, 4];
                    return [5, _loop_1(i)];
                case 2:
                    _a.sent();
                    _a.label = 3;
                case 3:
                    i++;
                    return [3, 1];
                case 4: return [2, wallets_1];
                case 5:
                    e_1 = _a.sent();
                    return [2, Promise.reject(e_1)];
                case 6: return [2];
            }
        });
    });
}
function generateSeed(address) {
    return __awaiter(this, void 0, void 0, function () {
        var signature, seed, err_2;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 2, , 3]);
                    return [4, blockchain_1.blockchain.sign(address, constants_1.SEED_MESSAGE)];
                case 1:
                    signature = _a.sent();
                    seed = ethereumjs_util_1.keccak256(signature_1.signatureToRSV(signature)).toString('hex');
                    return [2, seed];
                case 2:
                    err_2 = _a.sent();
                    return [2, Promise.reject(err_2)];
                case 3: return [2];
            }
        });
    });
}
//# sourceMappingURL=setupTrading.js.map