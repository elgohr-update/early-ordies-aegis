"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var web3_1 = __importDefault(require("web3"));
var store_1 = require("../store");
var blockchain_1 = require("../services/blockchain");
var websocket_1 = require("../services/websocket");
var _1 = require(".");
var storage_1 = require("../services/storage");
var contracts_1 = require("../services/contracts");
var errors_1 = require("../helpers/errors");
var __1 = require("..");
var heartbeat_1 = require("../services/heartbeat");
function init(config) {
    return __awaiter(this, void 0, void 0, function () {
        var contractAddress, operatorUrl, rpcUrl, storageEngine, privateKey, e_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    contractAddress = config.contractAddress, operatorUrl = config.operatorUrl, rpcUrl = config.rpcUrl, storageEngine = config.storageEngine, privateKey = config.privateKey;
                    if (!web3_1.default.utils.isAddress(contractAddress.toLowerCase())) {
                        throw new Error('Contract address is not valid');
                    }
                    if (operatorUrl === '' || operatorUrl == null) {
                        throw new Error('Operator url is not valid');
                    }
                    if (rpcUrl === '' || rpcUrl == null) {
                        throw new Error('RPC url is not valid');
                    }
                    store_1.createStore();
                    store_1.store.contractAddress = contractAddress;
                    store_1.store.operatorUrl = operatorUrl;
                    store_1.store.rpcUrl = rpcUrl;
                    if (!storageEngine) {
                        storageEngine = __1.memoryStorage;
                        console.log('[NOCUST] Using memory storage, do not use it in production!');
                    }
                    storage_1.storage.init(storageEngine);
                    blockchain_1.blockchain.init(rpcUrl, contractAddress);
                    websocket_1.websocket.init(operatorUrl);
                    if (!privateKey) return [3, 2];
                    return [4, _1.nocust.addPrivateKey(privateKey)];
                case 1:
                    _a.sent();
                    _a.label = 2;
                case 2:
                    heartbeat_1.startHeartbeat();
                    _a.label = 3;
                case 3:
                    _a.trys.push([3, 5, , 6]);
                    return [4, Promise.all([
                            blockchain_1.blockchain.fetchNetworkId(),
                            contracts_1.contracts.fetchGenesisBlock(),
                            contracts_1.contracts.fetchBlocksPerEon(),
                            contracts_1.contracts.fetchContractOwnerAddress(),
                            contracts_1.contracts.fetchMinChallengeGasCost(),
                            contracts_1.contracts.fetchSlackPeriod(),
                            contracts_1.contracts.fetchExtendedSlackPeriod(),
                            contracts_1.contracts.fetchEonsKept(),
                            contracts_1.contracts.fetchDepositsKept(),
                        ])];
                case 4:
                    _a.sent();
                    return [3, 6];
                case 5:
                    e_1 = _a.sent();
                    return [2, Promise.reject(new errors_1.NCError(errors_1.NCErrorCode.INITIALIZATION_FAILED, '', { e: e_1 }))];
                case 6: return [2];
            }
        });
    });
}
exports.default = init;
//# sourceMappingURL=init.js.map