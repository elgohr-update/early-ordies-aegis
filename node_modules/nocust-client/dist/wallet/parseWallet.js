"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var bignumber_js_1 = __importDefault(require("bignumber.js"));
var json_bigint_1 = __importDefault(require("json-bigint"));
var eon_1 = require("./eon");
var _1 = require(".");
function parseWallet(data) {
    var w = json_bigint_1.default.parse(data);
    var wallet = _1.createWallet(w.address, w.token);
    wallet.isRegistered = w.isRegistered;
    wallet.registrationEon = w.registrationEon;
    wallet.registrationSignature = w.registrationSignature;
    wallet.trailIdentifier = w.trailIdentifier;
    if (w.currentEon) {
        wallet.currentEon = new eon_1.Eon(wallet, w.currentEon.eon);
        if (w.currentEon.accountProof) {
            wallet.currentEon.accountProof = __assign(__assign({}, w.currentEon.accountProof), { left: new bignumber_js_1.default(w.currentEon.accountProof.left), right: new bignumber_js_1.default(w.currentEon.accountProof.right), pathValues: w.currentEon.accountProof.pathValues.map(function (v) { return new bignumber_js_1.default(v); }) });
        }
        wallet.currentEon.deposits = w.currentEon.deposits.map(function (d) { return (__assign(__assign({}, d), { amount: new bignumber_js_1.default(d.amount) })); });
        wallet.currentEon.transactions = w.currentEon.transactions.map(function (t) { return (__assign(__assign({}, t), { amount: new bignumber_js_1.default(t.amount), passiveMarker: new bignumber_js_1.default(t.passiveMarker), nonce: new bignumber_js_1.default(t.nonce) })); });
    }
    return wallet;
}
exports.parseWallet = parseWallet;
//# sourceMappingURL=parseWallet.js.map