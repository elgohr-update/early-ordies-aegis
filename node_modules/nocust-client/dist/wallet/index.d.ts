import { RegistrationPayload } from '../services/operator/payloads';
import { Signature } from './signature';
import { Eon } from './eon';
export interface Wallet {
    address: string;
    token: string;
    isRegistered: boolean;
    registrationEon?: number;
    trailIdentifier?: number;
    registrationSignature?: Signature;
    operatorRegistrationSignature?: Signature;
    parentAddress?: string;
    currentEon?: Eon;
    previousEon?: Eon;
}
export declare type WalletId = {
    address: string;
    token: string;
    trailIdentifier: number;
};
export declare const getWallet: (address: string, token: string) => Wallet;
export declare function updateWallet(wallet: Wallet): void;
export declare const createWallet: (address: string, token: string, parentAddress?: string) => Wallet;
export declare function fillWalletRegistration(wallet: Wallet, data: RegistrationPayload & {
    hash: string;
}): void;
